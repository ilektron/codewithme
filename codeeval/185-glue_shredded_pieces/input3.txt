|tics helps to |d proteome pro|rch for protei|unk DNA may, h|es computation|functional seq|any obvious pu|des within a g|     for examp|f the DNA do n|of the DNA do |in the genomes|y, however, co|Bioinformatics|n the use of D|genome are par|matics helps t|tides within a|tional sequenc|erve any obvio|nctional seque|nd other funct|ps to bridge t|not serve any |ence analysis |ojects     for|ysis is annota|bridge the gap|equences withi|omes of higher|   for example|alled junk DNA|idge the gap b|ces for protei| functional el|lps to bridge |ap between gen|of genes. With|ents. Bioinfor|helps to bridg|to bridge the |ements. Bioinf|s of higher or|on. This invol|projects     f|t all of the n|s helps to bri|ridge the gap |ional elements| involves comp|urpose. This s|contain unreco| example, in t| DNA sequences|ts of the DNA |informatics he| gene finding |e analysis is |volves computa|e gap between |s for protein |are part of ge|Another aspect|junk DNA may, |large parts of| sequence anal|utational gene| search for pr|coding genes, | nucleotides w|e. Not all of | and other fun|e are part of |her organisms,|cs in sequence|nome and prote|ognized functi|otein identifi|in sequence an|ics helps to b|ides within a |r functional s|oinformatics i|  for example,|formatics help|ctional elemen|Within the gen|quences for pr|, and other fu| serve any obv|recognized fun| use of DNA se|may, however, | within a geno|g genes, RNA g|rts of the DNA|A sequences fo|genes, and oth|rojects     fo|uence analysis| elements. Bio|gher organisms|quences within|e of DNA seque|ll of the nucl|, contain unre|. Not all of t|lves computati|ed functional |nctional eleme|sequences with|gene finding t|rge parts of t|nd proteome pr|otation. This |DNA may, howev|NA may, howeve|s in sequence |ding to search|n the genomes |otein-coding g|the use of DNA|the DNA do not|s computationa|, large parts |-coding genes,|n sequence ana|or example, in|r aspect of bi|cleotides with|her aspect of |led junk DNA m|bvious purpose| This so-calle|ational gene f|al elements. B|informatics in|ver, contain u|elps to bridge|for example, i|however, conta|DNA sequences | contain unrec|ontain unrecog| within a geno| RNA genes, an|ous purpose. T|is is annotati|of DNA sequenc| annotation. T|part of genes.|ding genes, RN|his involves c|nnotation. Thi|e use of DNA s| genome are pa| unrecognized |genome. Not al| parts of the |ing to search |of higher orga|me projects   |enes. Within t|ot all of the |annotation. Th|finding to sea| for protein-c|enome and prot| of the nucleo|nother aspect |ome are part o|s. Within the |otides within |ple, in the us|ain unrecogniz| for protein i|aspect of bioi|of bioinformat|onal elements.|s     for exam|alysis is anno|putational gen|ther functiona|tional element|hin the genome|analysis is an|nalysis is ann| the gap betwe|the gap betwee|nal gene findi|rotein-coding |in unrecognize|This so-called|spect of bioin| the DNA do no|s, and other f|r protein-codi|    for exampl|l elements. Bi|igher organism|d other functi|. This involve| junk DNA may,|n a genome are|in a genome. N|rmatics in seq|se of DNA sequ|proteome proje|n a genome. No|genomes of hig|nformatics in |tational gene |to search for |cognized funct|oteome project|ene finding to|n-coding genes|eotides within|gnized functio|arge parts of |ments. Bioinfo|or protein ide|t of bioinform| of higher org|ganisms, large|quence analysi|eome projects |ts     for exa| the use of DN|n unrecognized|, RNA genes, a|nk DNA may, ho|nized function|hin a genome a|other function|me. Not all of|inding to sear| however, cont|enes, and othe| genome. Not a| in the use of|identification|owever, contai|tion. This inv|in a genome ar| DNA do not se| the nucleotid|tein identific|NA genes, and | bridge the ga| and proteome | of bioinforma|lysis is annot| Within the ge|er organisms, |his so-called |nrecognized fu|of the nucleot|formatics in s|equence analys|pect of bioinf|sequence analy|zed functional|sis is annotat|in-coding gene|nvolves comput|nal sequences |nces for prote|een genome and|the nucleotide|gap between ge|ome. Not all o| aspect of bio|unctional sequ|ional gene fin|ves computatio|rganisms, larg|o-called junk |ious purpose. | not serve any|f the nucleoti|s, large parts|e. This so-cal|pose. This so-|computational |is so-called j|ences within a|equences for p|ormatics in se|nisms, large p|ose. This so-c|ntain unrecogn|isms, large pa|t of genes. Wi|example, in th| finding to se|notation. This| Not all of th| gap between g|ces within a g|ormatics helps| identificatio| computational|nome are part |DNA do not ser|nes. Within th|t serve any ob|rt of genes. W|f genes. Withi| may, however,|es within a ge|. Bioinformati| a genome are |genes, RNA gen|so-called junk|dge the gap be|enes, RNA gene|omputational g|arch for prote|RNA genes, and|es for protein|ge the gap bet|se. This so-ca|is involves co|ample, in the | the genomes o| between genom| in sequence a|A genes, and o|nces within a | protein ident|s of the DNA d| so-called jun|bioinformatics|s so-called ju|ot serve any o|organisms, lar|atics helps to|between genome| large parts o|enome. Not all| protein-codin|tween genome a|en genome and |al sequences w|ects     for e|p between geno|ein identifica|n. This involv|nucleotides wi| organisms, la|art of genes. |nding to searc|serve any obvi| all of the nu|ng to search f|A may, however|for protein-co|f bioinformati|er functional | projects     |A do not serve| bioinformatic|genome and pro|ge parts of th|ion. This invo|NA sequences f| for example, |s to bridge th|enomes of high|the genomes of| helps to brid|and proteome p|ioinformatics |ized functiona|matics in sequ|ional sequence|s, RNA genes, |oinformatics h|nes, and other|xample, in the|olves computat| of the DNA do| genomes of hi|cts     for ex|he DNA do not |es of higher o|l sequences wi|e the gap betw|o search for p| obvious purpo|nome. Not all |es, RNA genes,| any obvious p|ucleotides wit|ecognized func|protein identi|n identificati|oding genes, R|enome are part|g to search fo|higher organis|he gap between|mple, in the u|her functional|. Within the g|and other func|ever, contain | analysis is a| purpose. This|ation. This in|ay, however, c|vious purpose.|anisms, large |s within a gen|er, contain un|al gene findin|in the use of |s involves com|uences within |s is annotatio|use of DNA seq|r example, in |etween genome |r protein iden|onal sequences|ch for protein|sequences for |ome projects  |e parts of the|s within a gen|ics in sequenc| functional se|a genome. Not |NA do not serv|within a genom|s purpose. Thi| to bridge the|hin a genome. |ts. Bioinforma|atics in seque|rmatics helps |me are part of|mputational ge|e projects    |elements. Bioi|teome projects|e genomes of h|l of the nucle|. This so-call|re part of gen|y obvious purp|, in the use o|arts of the DN|s. Bioinformat|lled junk DNA | This involves| sequences for| are part of g|purpose. This |me and proteom|us purpose. Th|he use of DNA |s annotation. |es within a ge|e any obvious | to search for| higher organi|rve any obviou|o bridge the g|thin a genome.| Bioinformatic|l gene finding|ithin a genome| genes. Within|ed junk DNA ma|onal gene find|mes of higher |e DNA do not s|ein-coding gen|tional gene fi|e and proteome|earch for prot|ct of bioinfor|parts of the D| genome and pr|he nucleotides| genes, and ot|ms, large part| sequences wit|lements. Bioin| DNA may, howe|ce analysis is|d junk DNA may|roteome projec|e, in the use | of genes. Wit|, however, con|nes, RNA genes|r, contain unr|called junk DN|rotein identif|nts. Bioinform|nal elements. |in identificat|functional ele|le, in the use|ect of bioinfo|cs helps to br|wever, contain|or protein-cod|f DNA sequence|genes. Within |protein-coding| of DNA sequen|leotides withi|tein-coding ge|h for protein-| other functio|nce analysis i|obvious purpos|k DNA may, how|thin a genome |e finding to s|ng genes, RNA |within a genom|ny obvious pur|jects     for |tics in sequen|nformatics hel|r organisms, l|Not all of the|ween genome an|tation. This i|nomes of highe|dentification.|ithin a genome|es, and other |This involves |other aspect o|a genome are p|he genomes of |f higher organ|unrecognized f| proteome proj|search for pro|ithin the geno|o not serve an| part of genes|thin the genom| is annotation|sms, large par| genes, RNA ge|n genome and p|involves compu|d functional e|ctional sequen|e nucleotides | a genome. Not|ne finding to |all of the nuc|ing genes, RNA|is annotation.|unctional elem|do not serve a|uences for pro|ve any obvious|ences for prot|-called junk D|tain unrecogni|for protein id| do not serve |er aspect of b|es. Within the|ome and proteo|e part of gene|ther aspect of|ioinformatics |rpose. This so|
Another aspect of bioinformatics in sequence analysis is annotation. This involves computational gene finding to search for protein-coding genes, RNA genes, and other functional sequences within a genome. Not all of the nucleotides within a genome are part of genes. Within the genomes of higher organisms, large parts of the DNA do not serve any obvious purpose. This so-called junk DNA may, however, contain unrecognized functional elements. Bioinformatics helps to bridge the gap between genome and proteome projects     for example, in the use of DNA sequences for protein identification.
|earest c| travell|hbour al|alesman |ally not|and repe| all hav|e neares|tion to |sman sta|m city a|to deter|rithm wa|arts at |e first |have bee|ravellin|mine a s|een visi|ly visit|uickly y|ot the o|n proble|lly not |man prob|ighbour |. It qui|on to th|timal on|dly visi|city and|to the t|l all ha|t quickl|e salesm| nearest|ur algor|yields a|ts the n|lling sa|n it, th|arest ne|t, the s|til all |sits the|nearest |st algor| salesma|n visite| neighbo|ity and |sited. I| a rando|g salesm| problem|t city u|edly vis|ne of th|visited.|rts at a|ntil all|In it, t|ields a | It quic| have be|s a shor|o the tr|used to |ited. It|f the fi|was one |dom city|rmine a |ty until|visits t|ll have |ts at a | repeate|gorithm |salesman|y and re| short t|olution | city un|, but us|ms used |our algo|its the |eatedly | visited| one of |t usuall|quickly | the nea|y not th|ion to t|ne a sol|nd repea|been vis|ithm was| it, the|random c|velling |hort tou|thms use|kly yiel|sed to d|neighbou|o determ|ptimal o|problem.|e of the|en visit|t neighb|oblem. I|ling sal|hms used| algorit|travelli|ickly yi|optimal | city an|s used t|starts a|ermine a|rst algo|lgorithm|he neare| random |s the ne|usually |orithms |lgorithm|, the sa| usually| the opt|the sale|our, but| visits |arest ci| nearest|repeated|ing sale| used to|t the op|ly yield| to the | quickly|the firs|est city|ly not t|e neares|an probl|st neigh|an start|thm was |isited. |epeatedl|t a rand| was one|y until |It quick|e optima|ty and r|solution|sually n|The near|ng sales|it, the |s at a r| until a|salesman|blem. In|m was on|esman st| a solut|tedly vi|ave been|ve been | tour, b|first al|st city |d. It qu|rithms u|isits th|elling s|ed. It q|ity unti|algorith|gorithms|lem. In |hm was o|he trave|mal one.|termine |he optim| of the | first a| salesma|as one o|om city | at a ra| yields |y yields|nearest |orithm w|imal one|city unt|lesman s| In it, |ithms us|s one of|he neare|he sales|a random|atedly v|esman pr|the opti|ghbour a|ur, but |elds a s| the sal|alesman | determi|etermine|not the |a soluti|a short |r algori|n to the|ds a sho|ution to|short to| the fir|the trav|determin| and rep|ort tour|tour, bu|ckly yie|e a solu|. In it,|tarts at|ine a so|ed to de|irst alg| a short|e been v|ndom cit|est neig|m. In it|at a ran|until al|ually no|l have b| solutio|em. In i|ted. It |but usua|the near|all have|bour alg| algorit|lds a sh|sman pro|d to det|rest cit|andom ci|t algori|avelling| the tra|one of t|n starts|rt tour,|ut usual|roblem. | to dete| starts |d repeat|eighbour| but usu|e travel|r, but u|il all h| not the|he first| optimal|lution t|y visits|peatedly| been vi|rest nei|man star|algorith|t tour, |lesman p|earest n|of the f|
The nearest neighbour algorithm was one of the first algorithms used to determine a solution to the travelling salesman problem. In it, the salesman starts at a random city and repeatedly visits the nearest city until all have been visited. It quickly yields a short tour, but usually not the optimal one.
|as popularized by Alfr|m "PET", which stood f|ly-complete"), in acco|ted of the Theoretical|sus NP problem went, c|ded "Herculean", "form|ng to Donald Knuth, th|NP problem went, could| Ullman in their celeb| Science community.[6]|, which stood for "pro|stood for "probably ex|ET", which stood for "|uter Algorithms". He r|ld Knuth, the name "NP| with the results of a|nd Analysis of Compute|ther suggestions made | Computer Algorithms".|ed the change in the g|od for "probably expon|k (from "polynomially-|a poll he had conducte|ated textbook "The Des|ding to Donald Knuth, |ym "PET", which stood |mplete"), in accordanc|n Hopcroft and Jeffrey|xtbook "The Design and| "formidable", Steigli|rmidable", Steiglitz's|"PET", which stood for|Lin's acronym "PET", w| Aho, John Hopcroft an|alley proofs for the b|Science community.[6] |probably exponential t|etical Computer Scienc|vably exponential time|oiled" in honor of Coo|he name "NP-complete" |in their celebrated te|way the P versus NP pr| depending on which wa|omially-complete"), in|ing to Donald Knuth, t|e", Steiglitz's "hard-|effrey Ullman in their|n in their celebrated |He reports that they i| exponential time" or | (from "polynomially-c|ts that they introduce| change in the galley |y exponential time", b|-boiled" in honor of C| could stand for "prov|time" or "previously e|which stood for "proba|tood for "probably exp|nald Knuth, the name "|f Computer Algorithms"| Computer Science comm|ich stood for "probabl|d" in honor of Cook, a| the P versus NP probl|with the results of a |e community.[6] Other |but depending on which|puter Science communit|th the results of a po|for "probably exponent|conducted of the Theor|ms". He reports that t|poll he had conducted |he galley proofs for t|dable", Steiglitz's "h|ign and Analysis of Co|Ullman in their celebr|ofs for the book (from|hich way the P versus |s that they introduced| and Jeffrey Ullman in| Jeffrey Ullman in the|suggestions made in th|epending on which way |hat they introduced th|e change in the galley|nge in the galley proo| or "previously expone|Algorithms". He report|ial time", but dependi|ook (from "polynomiall| he had conducted of t|ch way the P versus NP|cronym "PET", which st| Alfred Aho, John Hopc|he had conducted of th| name "NP-complete" wa| in the galley proofs |he book (from "polynom|xponential time", but |ggestions made in the | Cook, and Shen Lin's |ronym "PET", which sto|bly exponential time",|n which way the P vers|r celebrated textbook |book "The Design and A|could stand for "prova|in the poll[7] include|problem went, could st|hms". He reports that |uded "Herculean", "for| the results of a poll|" or "previously expon|accordance with the re|glitz's "hard-boiled" | acronym "PET", which |Shen Lin's acronym "PE|boiled" in honor of Co| poll[7] included "Her|opcroft and Jeffrey Ul|Other suggestions made| was popularized by Al|frey Ullman in their c|or "provably exponenti| their celebrated text|croft and Jeffrey Ullm| by Alfred Aho, John H|ults of a poll he had |Herculean", "formidabl|from "polynomially-com|onald Knuth, the name |g to Donald Knuth, the|ably exponential time"| included "Herculean",|e had conducted of the|h the results of a pol|of a poll he had condu|f a poll he had conduc| Hopcroft and Jeffrey |e book (from "polynomi|llman in their celebra|ntroduced the change i|rated textbook "The De| to Donald Knuth, the | the galley proofs for| "provably exponential|ing on which way the P|ential time" or "previ|rized by Alfred Aho, J|'s acronym "PET", whic| "polynomially-complet|e P versus NP problem |, Steiglitz's "hard-bo| celebrated textbook "|polynomially-complete"|g on which way the P v|sults of a poll he had|he P versus NP problem|had conducted of the T|al time", but dependin|, John Hopcroft and Je|e", but depending on w|rd-boiled" in honor of|ook "The Design and An|and for "provably expo| John Hopcroft and Jef|r of Cook, and Shen Li|Design and Analysis of|d textbook "The Design|mmunity.[6] Other sugg|or the book (from "pol|and Jeffrey Ullman in |time", but depending o|or of Cook, and Shen L|n accordance with the |y Ullman in their cele|d Shen Lin's acronym "|provably exponential t|formidable", Steiglitz|-complete"), in accord|esults of a poll he ha|P versus NP problem we|oft and Jeffrey Ullman|gn and Analysis of Com| "probably exponential|, "formidable", Steigl| community.[6] Other s|is of Computer Algorit| on which way the P ve|lman in their celebrat|r "probably exponentia|uld stand for "provabl|] Other suggestions ma|Analysis of Computer A|Jeffrey Ullman in thei|z's "hard-boiled" in h|lebrated textbook "The|eiglitz's "hard-boiled|7] included "Herculean|ok, and Shen Lin's acr|n", "formidable", Stei|which way the P versus|. He reports that they|duced the change in th|proofs for the book (f|retical Computer Scien|d Analysis of Computer| "NP-complete" was pop|ly exponential time" o|t and Jeffrey Ullman i|ably exponential time"|plete" was popularized| Design and Analysis o|ording to Donald Knuth|her suggestions made i|e reports that they in|ly exponential time".[|ts of a poll he had co|t they introduced the |ience community.[6] Ot|textbook "The Design a| the name "NP-complete|pularized by Alfred Ah| "previously exponenti|e" was popularized by |d for "probably expone|ald Knuth, the name "N|d stand for "provably |Computer Algorithms". |"provably exponential |me", but depending on |heoretical Computer Sc|arized by Alfred Aho, |roduced the change in | stand for "provably e|rding to Donald Knuth,|s for the book (from "|orts that they introdu| in honor of Cook, and|ucted of the Theoretic|Alfred Aho, John Hopcr|e poll[7] included "He|rts that they introduc|the name "NP-complete"|John Hopcroft and Jeff|e"), in accordance wit|r "provably exponentia|hich stood for "probab|mputer Algorithms". He|n's acronym "PET", whi|luded "Herculean", "fo|ccordance with the res| honor of Cook, and Sh|culean", "formidable",|f Cook, and Shen Lin's|alysis of Computer Alg|s acronym "PET", which|ously exponential time|ould stand for "provab|pcroft and Jeffrey Ull|d Knuth, the name "NP-|fred Aho, John Hopcrof|y the P versus NP prob|P problem went, could |r Algorithms". He repo| of Computer Algorithm|for the book (from "po|usly exponential time"|e in the galley proofs|exponential time" or "|omputer Science commun|ed textbook "The Desig|in accordance with the|" was popularized by A|T", which stood for "p|they introduced the ch|ed of the Theoretical |the Theoretical Comput|"hard-boiled" in honor|gestions made in the p|xponential time" or "p|heir celebrated textbo|"), in accordance with|ohn Hopcroft and Jeffr|elebrated textbook "Th|he change in the galle|"NP-complete" was popu|viously exponential ti|the change in the gall|orithms". He reports t|me" or "previously exp|y exponential time".[8|ynomially-complete"), |ordance with the resul|or "previously exponen|rithms". He reports th|n honor of Cook, and S|nd Jeffrey Ullman in t|nalysis of Computer Al|ete"), in accordance w|lete" was popularized |ll he had conducted of|in the galley proofs f|tions made in the poll|lysis of Computer Algo|nding on which way the|er suggestions made in|al time" or "previousl| results of a poll he |included "Herculean", |their celebrated textb|he Design and Analysis|om "polynomially-compl|ok (from "polynomially|and Analysis of Comput|oduced the change in t|gorithms". He reports | had conducted of the |ncluded "Herculean", "|ime", but depending on|olynomially-complete")|rey Ullman in their ce|robably exponential ti|ial time" or "previous|poll[7] included "Herc| a poll he had conduct|the results of a poll |ime" or "previously ex|ntial time" or "previo|ut depending on which |ports that they introd|ood for "probably expo|ange in the galley pro|The Design and Analysi|ithms". He reports tha| He reports that they | exponential time".[8]| that they introduced |acronym "PET", which s|Knuth, the name "NP-co|"Herculean", "formidab|and Shen Lin's acronym|] included "Herculean"|al Computer Science co|iled" in honor of Cook|tial time", but depend|able", Steiglitz's "ha|ame "NP-complete" was |nd for "provably expon| versus NP problem wen|of the Theoretical Com|ete" was popularized b|roft and Jeffrey Ullma|o Donald Knuth, the na| and Shen Lin's acrony|o, John Hopcroft and J| "The Design and Analy|zed by Alfred Aho, Joh|the galley proofs for | popularized by Alfred|extbook "The Design an|exponential time", but|d "Herculean", "formid|te" was popularized by|ntial time", but depen|Cook, and Shen Lin's a|an", "formidable", Ste|tand for "provably exp|Aho, John Hopcroft and|NP-complete" was popul|Computer Science commu| textbook "The Design | poll he had conducted|was popularized by Alf|unity.[6] Other sugges|onential time" or "pre|onducted of the Theore|e results of a poll he| Steiglitz's "hard-boi|h stood for "probably |ook, and Shen Lin's ac|ially-complete"), in a|d for "provably expone| the book (from "polyn| proofs for the book (|ularized by Alfred Aho|", Steiglitz's "hard-b|idable", Steiglitz's "|ho, John Hopcroft and |'s "hard-boiled" in ho|stions made in the pol|PET", which stood for |midable", Steiglitz's |introduced the change |dance with the results|nential time", but dep|esign and Analysis of |ld stand for "provably|red Aho, John Hopcroft|lley proofs for the bo|Hopcroft and Jeffrey U|reports that they intr|lly-complete"), in acc|uced the change in the|ponential time" or "pr|lynomially-complete"),|ovably exponential tim|ey proofs for the book|he results of a poll h|ter Science community.|complete"), in accorda|en Lin's acronym "PET"|cience community.[6] O|e name "NP-complete" w|ebrated textbook "The |rom "polynomially-comp|n the poll[7] included|ons made in the poll[7|eviously exponential t|s NP problem went, cou|ge in the galley proof|ccording to Donald Knu|l Computer Science com|(from "polynomially-co|complete" was populari| in accordance with th|hen Lin's acronym "PET|em went, could stand f|h, the name "NP-comple| of the Theoretical Co|fs for the book (from | introduced the change|, the name "NP-complet|thms". He reports that|us NP problem went, co|stand for "provably ex|"polynomially-complete|lean", "formidable", S|f the Theoretical Comp|de in the poll[7] incl| suggestions made in t|man in their celebrate| time" or "previously |m "polynomially-comple|erculean", "formidable|hange in the galley pr|tz's "hard-boiled" in |-complete" was popular| the change in the gal|sis of Computer Algori|cted of the Theoretica|k, and Shen Lin's acro|made in the poll[7] in|mplete" was popularize|lts of a poll he had c|nential time" or "prev|ysis of Computer Algor|went, could stand for |ey introduced the chan|opularized by Alfred A|d the change in the ga| way the P versus NP p|uter Science community| of Cook, and Shen Lin|ok "The Design and Ana|d-boiled" in honor of |er Algorithms". He rep|rdance with the result|cording to Donald Knut|ential time", but depe|popularized by Alfred |". He reports that the|ad conducted of the Th|nity.[6] Other suggest|tical Computer Science|ble", Steiglitz's "har| exponential time", bu|hard-boiled" in honor |ormidable", Steiglitz'|n Lin's acronym "PET",|e Design and Analysis |s". He reports that th|"formidable", Steiglit|name "NP-complete" was| which stood for "prob|rculean", "formidable"|), in accordance with |s of a poll he had con|or "probably exponenti| Analysis of Computer |l time", but depending|in honor of Cook, and |honor of Cook, and She|on which way the P ver|ommunity.[6] Other sug| they introduced the c|s "hard-boiled" in hon| for "probably exponen|s popularized by Alfre|hey introduced the cha|y exponential time" or|to Donald Knuth, the n|sly exponential time".|eoretical Computer Sci|roofs for the book (fr|change in the galley p| for the book (from "p|n and Analysis of Comp| "Herculean", "formida|Donald Knuth, the name|iglitz's "hard-boiled"|Steiglitz's "hard-boil|d of the Theoretical C|m went, could stand fo| "hard-boiled" in hono|e "NP-complete" was po|.[6] Other suggestions|e" or "previously expo|tbook "The Design and |rsus NP problem went, |ducted of the Theoreti|uth, the name "NP-comp|ced the change in the |results of a poll he h|nym "PET", which stood|ersus NP problem went,| for "provably exponen|roblem went, could sta| went, could stand for| the poll[7] included |ch stood for "probably|celebrated textbook "T|mially-complete"), in |oofs for the book (fro|puter Algorithms". He | book (from "polynomia| Knuth, the name "NP-c|nd Shen Lin's acronym |ade in the poll[7] inc|sign and Analysis of C|ean", "formidable", St|me "NP-complete" was p|t, could stand for "pr|ns made in the poll[7]|in's acronym "PET", wh| in the poll[7] includ|ponential time", but d|the book (from "polyno|ed" in honor of Cook, | accordance with the r|at they introduced the|galley proofs for the |ley proofs for the boo|for "provably exponent|ffrey Ullman in their |larized by Alfred Aho,|6] Other suggestions m| made in the poll[7] i|of Computer Algorithms|omplete" was populariz|ty.[6] Other suggestio|nuth, the name "NP-com| of a poll he had cond|t depending on which w|y.[6] Other suggestion|ding on which way the |ft and Jeffrey Ullman |litz's "hard-boiled" i| which way the P versu| problem went, could s|e in the poll[7] inclu|P-complete" was popula|nomially-complete"), i|iously exponential tim| Shen Lin's acronym "P| "PET", which stood fo|omplete"), in accordan|", "formidable", Steig|ir celebrated textbook|pending on which way t|[6] Other suggestions |nce with the results o|ted textbook "The Desi|y proofs for the book | Theoretical Computer |oll[7] included "Hercu|y Alfred Aho, John Hop|eports that they intro|onential time", but de|ce with the results of| Other suggestions mad|previously exponential|bably exponential time|l he had conducted of |he poll[7] included "H|lem went, could stand |ll[7] included "Hercul|ed Aho, John Hopcroft |e galley proofs for th|oblem went, could stan|brated textbook "The D|cal Computer Science c|[7] included "Herculea|According to Donald Kn|, and Shen Lin's acron|nor of Cook, and Shen |d conducted of the The|ey Ullman in their cel|tial time" or "previou|bly exponential time" |onym "PET", which stoo|ce community.[6] Other|rovably exponential ti|, in accordance with t|"probably exponential | reports that they int|r the book (from "poly|h way the P versus NP |oretical Computer Scie|cordance with the resu|ity.[6] Other suggesti|lfred Aho, John Hopcro|l time" or "previously|uggestions made in the|ly exponential time", |omputer Algorithms". H|ed by Alfred Aho, John|hn Hopcroft and Jeffre| time", but depending |reviously exponential | galley proofs for the|d Jeffrey Ullman in th|nducted of the Theoret|mputer Science communi|k "The Design and Anal|cluded "Herculean", "f|ized by Alfred Aho, Jo|ance with the results |ich way the P versus N|y introduced the chang|blem went, could stand| and Analysis of Compu|ith the results of a p|itz's "hard-boiled" in|s of Computer Algorith|s made in the poll[7] |obably exponential tim|"previously exponentia|community.[6] Other su|ed "Herculean", "formi|ence community.[6] Oth| Algorithms". He repor| stood for "probably e|, but depending on whi|versus NP problem went|d Aho, John Hopcroft a|estions made in the po|that they introduced t|, could stand for "pro|Theoretical Computer S|th, the name "NP-compl|r "previously exponent|n the galley proofs fo|ter Algorithms". He re|e Theoretical Computer|r suggestions made in |nce community.[6] Othe|e with the results of |ally-complete"), in ac|d by Alfred Aho, John |the poll[7] included "|ent, could stand for "|an in their celebrated| in their celebrated t|plete"), in accordance|l[7] included "Hercule|eir celebrated textboo|he Theoretical Compute|ay the P versus NP pro|" in honor of Cook, an|ical Computer Science |"The Design and Analys|of Cook, and Shen Lin'|le", Steiglitz's "hard|", which stood for "pr|oll he had conducted o|er Science community.[|ard-boiled" in honor o|ions made in the poll[|r Science community.[6|munity.[6] Other sugge| Lin's acronym "PET", | but depending on whic|troduced the change in|ending on which way th|lete"), in accordance |te"), in accordance wi|teiglitz's "hard-boile|y-complete"), in accor|onor of Cook, and Shen|ng on which way the P |the P versus NP proble| NP problem went, coul|n their celebrated tex|nt, could stand for "p|led" in honor of Cook,| the Theoretical Compu|book (from "polynomial|lgorithms". He reports| conducted of the Theo|depending on which way| Donald Knuth, the nam|ulean", "formidable", |", but depending on wh|by Alfred Aho, John Ho| P versus NP problem w|
According to Donald Knuth, the name "NP-complete" was popularized by Alfred Aho, John Hopcroft and Jeffrey Ullman in their celebrated textbook "The Design and Analysis of Computer Algorithms". He reports that they introduced the change in the galley proofs for the book (from "polynomially-complete"), in accordance with the results of a poll he had conducted of the Theoretical Computer Science community.[6] Other suggestions made in the poll[7] included "Herculean", "formidable", Steiglitz's "hard-boiled" in honor of Cook, and Shen Lin's acronym "PET", which stood for "probably exponential time", but depending on which way the P versus NP problem went, could stand for "provably exponential time" or "previously exponential time".[8]
|etwork or directe|Given symptoms, t|clic graphical mo|probabilistic rel|probabilities of |ayesian network, |model is a probab|erence and learni|ient algorithms e|the probabilistic|k, belief network|yesian network, b|s. Given symptoms|ed acyclic graph | diseases. Effici|hical model that |esents a set of r| or directed acyc|example, a Bayesi|ts a set of rando|ases and symptoms|l is a probabilis|tional independen|d acyclic graph (|acyclic graph (DA| and their condit|nt algorithms exi|odel is a probabi|ymptoms. Given sy|ymptoms, the netw| probabilities of|nd symptoms. Give|epresent the prob| graph (DAG). For| presence of vari|obabilities of th|compute the proba|he presence of va|toms. Given sympt|resents a set of |babilities of the| a probabilistic |etwork can be use| (DAG). For examp|rithms exist that|clic graph (DAG).|t of random varia|directed acyclic |exist that perfor|esence of various|a set of random v|Bayesian network,|rious diseases. E|lationships betwe|gorithms exist th|ships between dis|ependencies via a|aphical model is |sents a set of ra|irected acyclic g| set of random va|o compute the pro|twork or directed| that represents |For example, a Ba|presence of vario|l independencies |listic graphical |yclic graphical m| Efficient algori| their conditiona| inference and le|d represent the p|epresents a set o|ef network or dir|presents a set of|el that represent|r directed acycli|cted acyclic grap| independencies v|uld represent the|eir conditional i|pute the probabil|relationships bet|thms exist that p|independencies vi|tween diseases an|yesian network co|rk can be used to|sent the probabil|ent the probabili|ted acyclic graph|the presence of v|ndom variables an| For example, a B|G). For example, |cies via a direct| the probabilisti|iables and their |le, a Bayesian ne|ncies via a direc|used to compute t| the probabilitie|and their conditi|twork could repre|esent the probabi|c graphical model|ence and learning|bilistic relation|nal independencie|del that represen|rected acyclic gr|a probabilistic g|ndencies via a di|Efficient algorit|ist that perform |ilities of the pr|es and symptoms. |st that perform i| conditional inde|is a probabilisti|d their condition|e probabilities o|t the probabilist|k can be used to | Bayesian network|ween diseases and|xist that perform|c graphical model|ompute the probab|ic graphical mode|ional independenc|abilities of the |oms, the network |variables and the|ips between disea|erform inference |AG). For example,| probabilistic re|babilistic graphi| the network can | variables and th|f various disease|lic graphical mod|ilistic relations|ses and symptoms.|hat represents a |bilistic graphica|listic relationsh|raph (DAG). For e|d to compute the | that perform inf|work can be used |ph (DAG). For exa|te the probabilit|at represents a s|, the network can|network or direct| network can be u|, belief network |ent algorithms ex|ptoms, the networ|. For example, a |iseases. Efficien|phical model that|sed to compute th|r conditional ind|n diseases and sy|etwork, belief ne|bilities of the p|elationships betw|encies via a dire|us diseases. Effi|ian network could|s diseases. Effic|arious diseases. |c relationships b|symptoms. Given s|he network can be| of the presence |random variables | algorithms exist|ties of the prese|ms exist that per|hips between dise| directed acyclic| graphical model |model that repres|c graph (DAG). Fo|graph (DAG). For | symptoms, the ne|del is a probabil|cient algorithms |hat perform infer|stic relationship|ic relationships |l that represents|to compute the pr| symptoms. Given |obabilistic relat| acyclic graphica|ms. Given symptom|ic graph (DAG). F|ected acyclic gra| acyclic graph (D|mpute the probabi|l model is a prob|ious diseases. Ef|iseases and sympt|esian network cou|graphical model i|sian network coul|). For example, a|rence and learnin|fficient algorith|ce of various dis|ases. Efficient a|robabilistic grap|robabilities of t|acyclic graphical|t that perform in|Bayesian network |e of various dise|d acyclic graphic|sence of various |irected acyclic g| model that repre|al model that rep| network could re|nce of various di|could represent t|or example, a Bay|onditional indepe|oms. Given sympto|yclic graph (DAG)|seases and sympto|een diseases and |riables and their|ficient algorithm|ps between diseas| of random variab|istic graphical m|the probabilities|f the presence of| is a probabilist|via a directed ac|onships between d|phical model is a|e, a Bayesian net|s exist that perf|network can be us|he probabilistic |d symptoms. Given|form inference an| be used to compu|dependencies via |twork can be used|ample, a Bayesian|ld represent the | random variables|eases. Efficient | exist that perfo| can be used to c|conditional indep|tic graphical mod| and symptoms. Gi|nce and learning.|lief network or d|f random variable|, a Bayesian netw|nt the probabilis|(DAG). For exampl|at perform infere|elief network or |s between disease|rform inference a|seases. Efficient|graphical model t| represent the pr|a directed acycli|symptoms, the net|dencies via a dir|s, the network ca|e probabilistic r|hms exist that pe|tic relationships|nference and lear|mptoms. Given sym|work or directed | relationships be|ionships between | between diseases| probabilistic gr| to compute the p|twork, belief net|ilistic graphical|ents a set of ran|mptoms, the netwo|ayesian network c|directed acyclic |lic graph (DAG). |ief network or di|r example, a Baye|om variables and |ithms exist that |ptoms. Given symp|et of random vari|ses. Efficient al|ous diseases. Eff|es and their cond|diseases and symp|ference and learn|s and their condi|n symptoms, the n|diseases. Efficie|e the probabiliti|m inference and l|rk, belief networ|cyclic graph (DAG|e used to compute|raphical model th|an network, belie|aphical model tha| diseases and sym|nts a set of rand|of the presence o|s a probabilistic|work could repres|ities of the pres|perform inference|rm inference and | Bayesian network|ed acyclic graphi|algorithms exist |ould represent th|onal independenci| a Bayesian netwo|set of random var|etwork could repr|s via a directed |esian network, be| model is a proba| of various disea|ical model that r| a directed acycl|ies via a directe|nditional indepen| a set of random |obabilistic graph|represents a set |ple, a Bayesian n|an be used to com|itional independe|ditional independ|al model is a pro|e network can be |a Bayesian networ|aph (DAG). For ex|network, belief n|nships between di|tionships between|that perform infe| example, a Bayes|ence of various d|ationships betwee| directed acyclic|xample, a Bayesia|m variables and t|ia a directed acy|les and their con|ic graphical mode|n network could r|s. Efficient algo|k or directed acy|ndependencies via|s a set of random|t perform inferen|andom variables a|ven symptoms, the|an network could | via a directed a| network or direc|pendencies via a | various diseases|ute the probabili|rk could represen|odel that represe|etween diseases a|toms, the network|eases and symptom|lities of the pre|rected acyclic gr|endencies via a d|DAG). For example|or directed acycl|ir conditional in|various diseases.|be used to comput|orithms exist tha|ariables and thei|cyclic graphical |s of the presence| the presence of |A Bayesian networ|can be used to co|ted acyclic graph|istic relationshi|ected acyclic gra|he probabilities |. Given symptoms,|ables and their c|babilistic relati| represents a set|al independencies|stic graphical mo|and symptoms. Giv|heir conditional |abilistic graphic|mple, a Bayesian |resent the probab|n network, belief|inference and lea| perform inferenc|ed to compute the|probabilistic gra|the network can b|belief network or|dom variables and|es. Efficient alg|cal model that re|n be used to comp|ork can be used t|hical model is a |el is a probabili|f network or dire|ork, belief netwo|ies of the presen|s and symptoms. G|abilistic relatio|represent the pro| compute the prob|bles and their co|es of the presenc|their conditional|rk or directed ac| network, belief |t represents a se|ical model is a p|of various diseas|a a directed acyc|k could represent| Given symptoms, |between diseases |present the proba| used to compute |iven symptoms, th|nd their conditio|of random variabl|ork could represe|sian network, bel|cal model is a pr|raphical model is|es via a directed|en diseases and s|lgorithms exist t|l model that repr| could represent | belief network o|ms, the network c|resence of variou|h (DAG). For exam|icient algorithms|work, belief netw|robabilistic rela|ork or directed a|that represents a|en symptoms, the |cted acyclic grap|. Efficient algor|ian network, beli|e presence of var|orm inference and|network could rep|t algorithms exis| graphical model |
A Bayesian network, belief network or directed acyclic graphical model is a probabilistic graphical model that represents a set of random variables and their conditional independencies via a directed acyclic graph (DAG). For example, a Bayesian network could represent the probabilistic relationships between diseases and symptoms. Given symptoms, the network can be used to compute the probabilities of the presence of various diseases. Efficient algorithms exist that perform inference and learning.
| categorie| each mark|xamples, e|ts whether|one catego|as belongi|t of relat|s, an SVM |supervised|ging to on|chines (SV|re a set o| SVM train|) are a se|used for c| machines |or classif|VMs) are a|gory or th|ted superv|d regressi|orithm bui|d for clas|mple falls|a set of t|o one cate|ries, an S|at predict| are a set| training |ked as bel|f two cate|ed learnin|earning me|e of two c|g methods |ation and |raining al|gories, an| example f|lds a mode|Support ve|pervised l| a new exa| related s|ples, each|Ms) are a |hines (SVM|ication an|amples, ea|set of tra|lassificat| set of re| that pred|assificati|longing to| one of tw| a model t|ithm build|ch marked |ning examp|sed for cl| supervise|s used for|algorithm |thods used|ategories,|whether a |s belongin| belonging|Given a se|ession. Gi|pport vect|ne categor|or machine|. Given a |del that p| an SVM tr|g algorith|upervised |ining exam|to one of |r classifi|gression. |ervised le|ample fall|falls into|g to one o|ven a set |ies, an SV|f related |arked as b|ssificatio|SVM traini| builds a |ort vector|categories|dicts whet|ory or the| regressio|ed supervi| training |w example |nd regress|ple falls |a set of r|edicts whe|n and regr|d as belon|es (SVMs) |, an SVM t|thm builds|raining ex|examples, |ed as belo|e falls in|or the oth| to one of| methods u|nto one ca|sed learni|of trainin|ning algor|g examples|achines (S|l that pre|ach marked|les, each |uilds a mo|s whether | one categ| learning |xample fal|ining algo|port vecto|fication a|rithm buil| of traini|ated super|ression. G|a model th|r a new ex|e category|VM trainin|for classi|vised lear| (SVMs) ar|SVMs) are |ethods use|model that|hm builds |tegory or | as belong|rning meth|en a set o|builds a m| predicts |ng methods|machines (| vector ma| a set of | two categ|n a set of|elonging t|s (SVMs) a| of two ca|ategory or|o categori|e a set of|n SVM trai|es, an SVM|ories, an | used for |category o|learning m|ds a model|, each mar| marked as|s a model |t vector m|and regres|m builds a|egression.|ised learn| examples,|t predicts|mples, eac|ilds a mod|elated sup|redicts wh|(SVMs) are|ing to one|ion. Given|et of trai|her a new |ning metho|sion. Give| falls int|classifica|aining alg| classific| the other|M training|cation and|regression|egories, a|y or the o|h marked a|new exampl|example fa|rvised lea|belonging |tion and r|rt vector |lls into o|ector mach|rked as be|s into one|hether a n|r machines|sification|ng example|ew example|upport vec|ds used fo|one of two|ng algorit|lated supe| and regre| or the ot|arning met|d learning|f training|o one of t|the other.|aining exa|ether a ne|et of rela| set of tr|each marke| Given a s|methods us|ing algori|ther a new| whether a|el that pr| model tha|odel that |lgorithm b| new examp|t of train|hods used |a new exam|gorithm bu|into one c|le falls i|marked as |ssion. Giv|training a| for class|cts whethe|onging to |wo categor|tor machin|ing method|r the othe|on. Given |er a new e|of two cat|ng to one |to one cat|predicts w|ls into on|are a set |training e|ines (SVMs|ification |ods used f|iven a set| a set of | algorithm|es, each m|ing exampl|an SVM tra|s) are a s|ion and re|two catego|related su|set of rel|d supervis|ne of two |that predi|vector mac|ry or the |alls into |egory or t|of related| of relate|on and reg|hat predic|s, each ma|ctor machi|tegories, | into one |ed for cla|nging to o|n. Given a| category |nes (SVMs)|icts wheth|
Support vector machines (SVMs) are a set of related supervised learning methods used for classification and regression. Given a set of training examples, each marked as belonging to one of two categories, an SVM training algorithm builds a model that predicts whether a new example falls into one category or the other.
| toolbox might be t|ions",[14] "sketche|pproximate k-NN sea|olbox might be the |ing a similarity se|.g. when performing|e hashing, "random |tches" [15] or othe| "random projection| search on live vid| very-high-dimensio| locality sensitive|niques from VLDB to|LDB toolbox might b|larity search techn|nning a fast approx| "sketches" [15] or|ght be the only fea|eams, DNA data or h|dimensional time se|s" [15] or other hi|dimensional similar|4] "sketches" [15] |NN search using loc|h techniques from V|andom projections",|ocality sensitive h|y sensitive hashing|random projections"|. when performing a|ry-high-dimensional|al similarity searc| approximate k-NN s|hniques from VLDB t|mate k-NN search us|be the only feasibl|e series) running a|datasets (e.g. when| similarity search |ive hashing, "rando|hes" [15] or other |h on live video str|earch techniques fr|r very-high-dimensi|nsional datasets (e|locality sensitive |h-dimensional simil|g a similarity sear|r high-dimensional |itive hashing, "ran| using locality sen| time series) runni|running a fast appr|imensional similari| data or high-dimen|l time series) runn|s from VLDB toolbox|-NN search using lo|search using locali|"sketches" [15] or |n live video stream|(e.g. when performi|rforming a similari|ets (e.g. when perf|cality sensitive ha|data or high-dimens| the only feasible |ximate k-NN search |l datasets (e.g. wh|ox might be the onl|VLDB toolbox might |al time series) run|onal similarity sea|ity search techniqu| series) running a |mensional time seri|ery-high-dimensiona|sing locality sensi|high-dimensional si| video streams, DNA| VLDB toolbox might|ty search technique|al datasets (e.g. w|DB toolbox might be|ques from VLDB tool|deo streams, DNA da|earch on live video|ight be the only fe|s, DNA data or high|[14] "sketches" [15|es from VLDB toolbo|g a fast approximat|ve video streams, D|imate k-NN search u|k-NN search using l|igh-dimensional dat|mensional datasets |ashing, "random pro|nal datasets (e.g. | or other high-dime|s",[14] "sketches" |gh-dimensional data| search using local|box might be the on|etches" [15] or oth|ensional similarity|approximate k-NN se|the only feasible o|ing locality sensit| streams, DNA data |time series) runnin|high-dimensional ti|ries) running a fas|arch techniques fro|rom VLDB toolbox mi|ast approximate k-N|rch techniques from|imensional time ser|similarity search t|] "sketches" [15] o|me series) running |ional datasets (e.g|imensional datasets|nsitive hashing, "r|ch techniques from |NA data or high-dim|s) running a fast a|ms, DNA data or hig|lity sensitive hash|n performing a simi|jections",[14] "ske| fast approximate k| only feasible opti|imilarity search te|series) running a f|For very-high-dimen|techniques from VLD|-dimensional time s|tasets (e.g. when p|nal time series) ru|video streams, DNA | might be the only |x might be the only|performing a simila|A data or high-dime|streams, DNA data o|iques from VLDB too|ning a fast approxi| other high-dimensi|sketches" [15] or o|onal time series) r| datasets (e.g. whe|rojections",[14] "s|using locality sens|echniques from VLDB|ming a similarity s|atasets (e.g. when |oximate k-NN search|B toolbox might be |ilarity search on l| sensitive hashing,|might be the only f| [15] or other high|imilarity search on|h-dimensional time | be the only feasib|ch using locality s|ilarity search tech|sional datasets (e.|e.g. when performin|ata or high-dimensi|s (e.g. when perfor| or high-dimensiona| techniques from VL|g. when performing |m projections",[14]|ies) running a fast|sional similarity s|mensional similarit|dimensional dataset|sensitive hashing, |DNA data or high-di| live video streams| hashing, "random p|ons",[14] "sketches|ta or high-dimensio| from VLDB toolbox |ther high-dimension|m VLDB toolbox migh|on live video strea|e only feasible opt| performing a simil|ate k-NN search usi|similarity search o|tive hashing, "rand| DNA data or high-d|ensitive hashing, "|only feasible optio| on live video stre|very-high-dimension|es" [15] or other h|ns",[14] "sketches"|te k-NN search usin|rity search techniq|rch using locality |ches" [15] or other|e the only feasible|nal similarity sear|om VLDB toolbox mig|ng a similarity sea|e k-NN search using|ional similarity se|g locality sensitiv|st approximate k-NN|[15] or other high-|ctions",[14] "sketc|milarity search on | projections",[14] |eo streams, DNA dat|ht be the only feas| running a fast app|sitive hashing, "ra|14] "sketches" [15]|, DNA data or high-|ly feasible option.|ts (e.g. when perfo|when performing a s|er high-dimensional|sional time series)|arch using locality|ideo streams, DNA d|ty search on live v|ketches" [15] or ot|a similarity search|ections",[14] "sket|erforming a similar|chniques from VLDB | search techniques |lbox might be the o|,[14] "sketches" [1|arch on live video |treams, DNA data or|15] or other high-d|" [15] or other hig|rch on live video s|o streams, DNA data|h-dimensional datas|) running a fast ap|gh-dimensional time|N search using loca|y-high-dimensional |a fast approximate |he only feasible op|gh-dimensional simi|nsional similarity |sets (e.g. when per|y search on live vi|-high-dimensional d|search techniques f|or very-high-dimens|ams, DNA data or hi|ch on live video st|t approximate k-NN |rity search on live|from VLDB toolbox m|unning a fast appro|other high-dimensio|es) running a fast |rming a similarity |t be the only feasi|or high-dimensional| high-dimensional s|milarity search tec|igh-dimensional tim| k-NN search using |live video streams,|reams, DNA data or |hashing, "random pr|ity sensitive hashi| similarity search |or other high-dimen|igh-dimensional sim|5] or other high-di|hen performing a si|h using locality se|ty sensitive hashin|] or other high-dim| when performing a |arity search techni| high-dimensional t|search on live vide|dom projections",[1|eries) running a fa| (e.g. when perform|g, "random projecti|a or high-dimension|her high-dimensiona|"random projections|ng a fast approxima|earch using localit|ensional datasets (|ng, "random project|",[14] "sketches" [|-dimensional datase|ity search on live |orming a similarity|om projections",[14|ing, "random projec|ojections",[14] "sk|ng locality sensiti| a similarity searc|ues from VLDB toolb|y search techniques|, "random projectio|ive video streams, |ime series) running|projections",[14] "|ing a fast approxim|asets (e.g. when pe|ional time series) | a fast approximate|onal datasets (e.g.|forming a similarit|proximate k-NN sear|nly feasible option|hing, "random proje|nsional time series|roximate k-NN searc|high-dimensional da|larity search on li|toolbox might be th|ality sensitive has|-dimensional simila|fast approximate k-|r other high-dimens|oolbox might be the|l similarity search|tions",[14] "sketch|arity search on liv|shing, "random proj|ensional time serie|ndom projections",[|en performing a sim|e video streams, DN|r high-dimensional |ve hashing, "random|
For very-high-dimensional datasets (e.g. when performing a similarity search on live video streams, DNA data or high-dimensional time series) running a fast approximate k-NN search using locality sensitive hashing, "random projections",[14] "sketches" [15] or other high-dimensional similarity search techniques from VLDB toolbox might be the only feasible option.
|velop marketing| in a centraliz|mine sales tren|mining techniqu|to determine sa|ata mining soft|int-of-sale dat|ng rate. For ex|data with data |ion point-of-sa|o analyze it. I|lion point-of-s|lected by compa|es at an explod|cesses over 20 |chniques they w| it. If Walmart|. This informat|rt analyzed the|point-of-sale t| more accuratel|determine sales|s every day. Th| analyze it. If|sale transactio|e sales trends,|igns, and more |y predict custo| able to determ|today   s world|r example, Walm| analyzed their|marketing campa|heir point-of-s|ues they would |ct customer loy|hout some type |t-of-sale data |ining software |uld be useless |tomer loyalty.[|ing collected b|is stored in a |formation is st| being collecte|t analyzed thei|n a centralized|ustomer loyalty|s trends, devel|e of data minin|rends, develop |ns, and more ac|ould be able to|y would be able|his information| transactions e|sses over 20 mi|tored in a cent|zed database, b|ome type of dat| and more accur|red in a centra|d in a centrali|pe of data mini|n is stored in |ta mining techn|day. This infor|rocesses over 2|ately predict c|e data with dat|ess without som|, Walmart proce|ed in a central|oint-of-sale tr|on is stored in|s information i| but would be u|s without some |ntralized datab|to analyze it. | of data mining|world raw data |ses over 20 mil|-sale data with|yzed their poin|ay   s world ra|tabase, but wou| be useless wit|rketing campaig|s at an explodi|s world raw dat|me type of data| data mining te|llion point-of-| develop market|yze it. If Walm|esses over 20 m|seless without | software to an|ermine sales tr| predict custom|with data minin|oftware to anal|g campaigns, an|develop marketi|es they would b| rate. For exam|ccurately predi| a centralized |ir point-of-sal|rate. For examp|gns, and more a|aigns, and more|s over 20 milli|This informatio|of-sale transac|ithout some typ|niques they wou|ques they would| customer loyal|te. For example|cted by compani|out some type o|mpaigns, and mo|, develop marke|ng techniques t|exploding rate.|lyze it. If Wal|ning software t|a with data min|actions every d|nalyze it. If W|ralized databas|keting campaign|a is being coll|by companies at|stored in a cen|oding rate. For|raw data is bei|database, but w| their point-of|-of-sale data w|o determine sal|nt-of-sale data| is stored in a| an exploding r| useless withou|illion point-of|ftware to analy|atabase, but wo| without some t|0 million point| accurately pre|ict customer lo|  s world raw d|day   s world r|art analyzed th| techniques the|ning techniques|be able to dete| type of data m| mining softwar|paigns, and mor|ely predict cus|curately predic|tions every day|t processes ove|lop marketing c|processes over |abase, but woul|llected by comp|rmation is stor|arketing campai|ampaigns, and m|ze it. If Walma| over 20 millio|ine sales trend|more accurately|alyze it. If Wa|e accurately pr|ey would be abl|data mining sof|lmart analyzed |e it. If Walmar|it. If Walmart |ry day. This in|op marketing ca|se, but would b|y. This informa| companies at a|data mining tec|ctions every da|redict customer|sales trends, d|e transactions |e to determine |t some type of |eless without s|t. If Walmart a|lmart processes|hniques they wo|software to ana|ales trends, de|If Walmart anal|of-sale data wi| at an explodin|s being collect|ta with data mi|le, Walmart pro|ss without some|oday   s world |f data mining s|alyzed their po|at an exploding| information is|every day. This| to determine s|being collected|t customer loya|p marketing cam|orld raw data i|their point-of-|ata mining tech|ons every day. | trends, develo|s, develop mark|predict custome| million point-|ding rate. For |mart processes |is information | today   s worl|campaigns, and | If Walmart ana|ns every day. T| day. This info|ing campaigns, |ation is stored| exploding rate|data is being c|termine sales t|in a centralize| data mining so|d raw data is b|es over 20 mill|panies at an ex|ed by companies|d their point-o|would be able t|they would be a|ata with data m|e to analyze it|type of data mi|g software to a|re to analyze i|ver 20 million |and more accura|a mining techni|rmine sales tre|ies at an explo|g techniques th|ected by compan|ut would be use|y   s world raw|ocesses over 20|e useless witho|ed their point-|transactions ev|int-of-sale tra|h data mining t|centralized dat|entralized data| by companies a|ta is being col|ollected by com|trends, develop|omer loyalty.[2|be useless with|d by companies | every day. Thi| data with data|sale data with | to analyze it.|ale data with d|ore accurately |would be useles| would be usele|stomer loyalty.|very day. This |f Walmart analy|ansactions ever|anies at an exp|ta mining softw|r 20 million po|ends, develop m|ate. For exampl|ould be useless|e able to deter|base, but would|able to determi|almart processe|ype of data min|ld be able to d|. For example, | For example, W|customer loyalt|evelop marketin| raw data is be|ormation is sto|ed database, bu|less without so|Walmart analyze|e type of data |nt-of-sale tran|ase, but would |without some ty|ery day. This i| s world raw da|tware to analyz|ng software to |r point-of-sale|mart analyzed t|e, but would be|, and more accu|edict customer |g rate. For exa|example, Walmar|t-of-sale trans|million point-o|d more accurate|almart analyzed| is being colle|tralized databa|ld raw data is |d be able to de|-sale transacti|on point-of-sal| centralized da|ion is stored i|ut some type of|tion is stored |s they would be|For example, Wa|but would be us|   s world raw |elop marketing |g collected by |ay. This inform|mining software|ored in a centr| Walmart analyz|eting campaigns|of data mining |mple, Walmart p|mer loyalty.[24|ata is being co|ds, develop mar|f-sale data wit|analyzed their |ith data mining|n point-of-sale|y companies at |a centralized d|eing collected |point-of-sale d|or example, Wal|le to determine|techniques they| collected by c|oint-of-sale da|In today   s wo|dict customer l|rld raw data is|s stored in a c|ple, Walmart pr|ing software to|nd more accurat| database, but |ample, Walmart |companies at an|ining technique|ing techniques |hey would be ab|ompanies at an |mpanies at an e|t an exploding |rt processes ov|uld be able to |tely predict cu|rately predict |ing rate. For e| 20 million poi|n today   s wor|thout some type|etermine sales |lyzed their poi| would be able |some type of da|. If Walmart an|w data is being|ions every day.|les trends, dev| stored in a ce|loding rate. Fo|accurately pred|useless without|nds, develop ma|f-sale transact|analyze it. If | example, Walma|nsactions every|-of-sale transa|e, Walmart proc| some type of d|is being collec|re accurately p| point-of-sale |le data with da|an exploding ra| Walmart proces|xample, Walmart|ted by companie| mining techniq| marketing camp|zed their point|y day. This inf|ploding rate. F|a mining softwa|information is |over 20 million|ng collected by|, but would be |ale transaction|ware to analyze| point-of-sale |ting campaigns,|d database, but|ble to determin|e. For example,|ng campaigns, a|le transactions| with data mini|alized database|eir point-of-sa|lized database,| determine sale|aw data is bein|n exploding rat| they would be |mation is store| This informati|er loyalty.[24]|20 million poin|d be useless wi| world raw data|collected by co| processes over|es trends, deve|are to analyze |ld be useless w| sales trends, |nalyzed their p| campaigns, and| data is being |th data mining |art processes o|s, and more acc|nformation is s|Walmart process|iques they woul|ly predict cust|ransactions eve|er 20 million p|urately predict|xploding rate. |sactions every |nies at an expl|ized database, | be able to det|echniques they |t would be usel|ne sales trends|
In today   s world raw data is being collected by companies at an exploding rate. For example, Walmart processes over 20 million point-of-sale transactions every day. This information is stored in a centralized database, but would be useless without some type of data mining software to analyze it. If Walmart analyzed their point-of-sale data with data mining techniques they would be able to determine sales trends, develop marketing campaigns, and more accurately predict customer loyalty.[24]
| polynomial-time reducti|r log space reductions. |-complete. Whether under|tion then there is also |ons define a strictly sm|ion then there is also a|known, however, that AC0|r these types of reducti|e. Since every computati|o distinguish more class|n which is a many-one re| AC0 reductions define a|ete even under much weak|own NP-complete problems| however, that AC0 reduc|der these types of reduc|0 reductions define a st|at can be done in logari|tion that can be compute|olynomial time it follow|is a many-one reduction |oblems remain NP-complet|re refined than the more|blems remain NP-complete|one reduction. This type|which is a many-one redu| allows us to distinguis|ich is a many-one reduct| many-one reduction whic|al-time many-one reducti|istinguish more classes |-complete problems remai|This type of reduction i|a many-one reduction tha| that can be done in log|ems remain NP-complete e|ction that can be comput|any-one reduction that c|ned than the more usual |duction that is also oft|ime many-one reduction. |tly known NP-complete pr|s of reductions the defi|, all currently known NP| it follows that if ther|many-one reduction then |definition of NP-complet|one in polynomial time i| and it allows us to dis|P-complete problems are |s still an open problem.|t can be computed with o|e NP-completeness is the|reductions. Indeed, all |space. Since every compu| reduction is more refin| done in logarithmic spa|can be computed with onl| only a logarithmic amou|lete even under much wea|ductions define a strict|lems are NP-complete und| definition of NP-comple|r type of reduction that|mplete even under much w|ny-one reduction then th|pace many-one reduction |arithmic-space many-one | remain NP-complete even|nder much weaker reducti|polynomial-time many-one|ne in polynomial time it|te changes is still an o|on of NP-complete change|then there is also a pol| can be computed with on|can also be done in poly|e refined than the more |s.[4] It is known, howev|lete problems remain NP-|the definition of NP-com|ions. Indeed, all curren| under log space reducti|ms remain NP-complete ev|ny-one reduction which i|ver, that AC0 reductions|.[4] It is known, howeve|ed to define NP-complete|mial-time reductions.[5]|so be done in polynomial|eness is the logarithmic|n logarithmic space can |logarithmic space can al|roblem. All currently kn|nown, however, that AC0 |hmic-space many-one redu|ace. Since every computa|e. Whether under these t|e usual polynomial-time |s that if there is a log|e classes such as P-comp|en under much weaker red|ws us to distinguish mor|he definition of NP-comp|lows that if there is a |eductions.[4] It is know|] It is known, however, |n open problem. All curr|arithmic-space many-one |arithmic space can also | reduction then there is|tion. This type of reduc| the logarithmic-space m|main NP-complete even un|polynomial time it follo| many-one reduction then|l currently known NP-com|ce many-one reduction wh|ial time it follows that| is a many-one reduction|ch as P-complete. Whethe|leteness is the logarith| a many-one reduction th|n NP-complete problems r|ows us to distinguish mo|ynomial-time reductions.|plete. Whether under the|ons. Indeed, all current|r much weaker reductions|under much weaker reduct|hat can be done in logar|more refined than the mo|reductions define a stri|ete under log space redu|ether under these types | with only a logarithmic|e done in logarithmic sp|o define NP-completeness|ce reductions. Indeed, a| currently known NP-comp|roblems are NP-complete |ed with only a logarithm|ill an open problem. All|ce can also be done in p|more classes such as P-c| there is also a polynom|tly smaller class than p|ction is more refined th|ese types of reductions |sh more classes such as | that AC0 reductions def|e changes is still an op|an be done in logarithmi|NP-complete problems are| of reduction is more re|an polynomial-time reduc|ently known NP-complete |is a logarithmic-space m|ven under much weaker re|ductions the definition | reductions.[4] It is kn|-complete even under muc|lynomial-time many-one r|on that can be done in l|ows that if there is a l| it allows us to disting|ogarithmic amount of spa|hat if there is a logari| than polynomial-time re| class than polynomial-t|often used to define NP-|pen problem. All current|nges is still an open pr| of reduction that is al|hat AC0 reductions defin|oblem. All currently kno|ess is the logarithmic-s|n, however, that AC0 red|nly a logarithmic amount|omplete problems remain |han the more usual polyn|n that can be done in lo|al time it follows that | more usual polynomial-t|thmic amount of space. S|al polynomial-time many-|pe of reduction is more |nce every computation th|ction which is a many-on|thmic space can also be | logarithmic-space many-|at if there is a logarit|refined than the more us|en used to define NP-com| a strictly smaller clas|omial time it follows th|er under these types of |ion which is a many-one |ition of NP-complete cha|n that can be computed w|t is also often used to |s us to distinguish more|n there is also a polyno| in logarithmic space ca|ch weaker reductions.[4]|reduction that is also o| computed with only a lo| of NP-complete changes |e every computation that|en there is also a polyn|ithmic-space many-one re|ler class than polynomia|problems remain NP-compl|mount of space. Since ev|ere is a logarithmic-spa|ion. This type of reduct|efined than the more usu|follows that if there is|thmic-space many-one red|uctions and it allows us|any-one reduction which |ion that can be computed|more usual polynomial-ti|nt of space. Since every|lso often used to define|on then there is also a |reduction. This type of |er, that AC0 reductions |sual polynomial-time man|n NP-complete problems a|ete problems remain NP-c|e of reduction is more r|s to distinguish more cl|. All currently known NP|complete problems are NP| reduction that can be c|e reduction then there i| is more refined than th|eed, all currently known| a logarithmic amount of|s define a strictly smal|can be done in logarithm| distinguish more classe|It is known, however, th| many-one reduction. Thi|y computation that can b|e many-one reductions an|s more refined than the |space reductions. Indeed|smaller class than polyn|P-complete. Whether unde|is also a polynomial-tim|other type of reduction |C0 reductions define a s|t allows us to distingui|omplete problems are NP-| Indeed, all currently k|arithmic amount of space| type of reduction is mo| under these types of re| more refined than the m|eduction then there is a|ions the definition of N|y-one reduction which is|ial-time many-one reduct|deed, all currently know|ther under these types o|hanges is still an open |c-space many-one reducti|lso a polynomial-time ma| us to distinguish more | It is known, however, t|known NP-complete proble|tions the definition of |h is a many-one reductio| all currently known NP-|eaker reductions.[4] It |e problems are NP-comple|e reduction that can be | problem. All currently |reductions.[4] It is kno|wn NP-complete problems |te problems remain NP-co|uctions.[4] It is known,|n also be done in polyno|ne reduction then there |s and it allows us to di| Since every computation| even under much weaker |y a logarithmic amount o|te problems are NP-compl|ons.[4] It is known, how| done in polynomial time|f space. Since every com|ne a strictly smaller cl|tions. Indeed, all curre|omial-time reductions.[5|mplete problems are NP-c|eduction that is also of|f NP-complete changes is|much weaker reductions.[|ently known NP-complete |that AC0 reductions defi|ss is the logarithmic-sp|ollows that if there is |nomial-time many-one red|completeness is the loga| All currently known NP-|n NP-complete even under|nother type of reduction|r, that AC0 reductions d|t if there is a logarith|logarithmic-space many-o|that is also often used |er much weaker reduction|s are NP-complete under |eteness is the logarithm|e it follows that if the|ny-one reduction that ca|ges is still an open pro|ial-time many-one reduct|eduction which is a many| an open problem. All cu|omplete under log space |pace. Since every comput|of reduction is more ref|g space reductions. Inde|ductions and it allows u|, however, that AC0 redu|ns. Indeed, all currentl| also a polynomial-time |e logarithmic-space many| NP-complete problems re|plete changes is still a|ever, that AC0 reduction|on. This type of reducti| type of reduction that |an be computed with only|hese types of reductions|finition of NP-complete |s also often used to def|e under log space reduct|-one reduction that can |efinition of NP-complete|t is known, however, tha|ntly known NP-complete p|mplete under log space r|also be done in polynomi|. Indeed, all currently |l polynomial-time many-o|mpleteness is the logari|s the definition of NP-c|tinguish more classes su|reduction which is a man|r under these types of r|ller class than polynomi|omplete even under much | often used to define NP|y known NP-complete prob|eduction that can be com|n problem. All currently|define NP-completeness i|s remain NP-complete eve|emain NP-complete even u| a polynomial-time many-|all currently known NP-c|n be done in logarithmic|pace can also be done in|eduction is more refined|lso be done in polynomia|n of NP-complete changes|duction. This type of re|y smaller class than pol|NP-complete problems rem|ith only a logarithmic a|s known, however, that A| NP-completeness is the |her under these types of|oblems are NP-complete u|duction that can be comp|many-one reduction. This|e definition of NP-compl|e many-one reduction. Th|h weaker reductions.[4] |omputed with only a loga| problems are NP-complet|e is a logarithmic-space|reduction is more refine|ns define a strictly sma|ction then there is also| classes such as P-compl|mic space can also be do|class than polynomial-ti|efine a strictly smaller|plete under log space re|owever, that AC0 reducti|mputation that can be do|ogarithmic space can als|uish more classes such a|unt of space. Since ever|of reduction that is als| many-one reduction that|uction that is also ofte|ctions the definition of|ere is also a polynomial|problems are NP-complete| reduction which is a ma|ic-space many-one reduct|at is also often used to|time many-one reduction.|type of reduction that i|n is more refined than t|space many-one reduction|n used to define NP-comp|ne reduction that can be|however, that AC0 reduct|mplete. Whether under th|n the more usual polynom|lass than polynomial-tim|garithmic-space many-one|under these types of red| also often used to defi|re is also a polynomial-|o be done in polynomial | define a strictly small| these types of reductio|omial-time many-one redu|te under log space reduc|ne in logarithmic space |complete changes is stil|e NP-complete under log |s than polynomial-time r| space. Since every comp|than polynomial-time red|one reduction which is a|P-complete problems rema|wn, however, that AC0 re|ch is a many-one reducti|ery computation that can|reductions the definitio| This type of reduction |f reduction that is also|s is the logarithmic-spa|pleteness is the logarit|trictly smaller class th| if there is a logarithm|tion which is a many-one|ace can also be done in |space many-one reduction|ual polynomial-time many|classes such as P-comple|that if there is a logar|garithmic amount of spac|t AC0 reductions define |to distinguish more clas|s P-complete. Whether un|rithmic-space many-one r|tions define a strictly |puted with only a logari|me it follows that if th|ompleteness is the logar|ish more classes such as|es such as P-complete. W|a polynomial-time many-o|ctions. Indeed, all curr|ine NP-completeness is t|at can be computed with |duction then there is al| is a logarithmic-space | such as P-complete. Whe|time it follows that if |rently known NP-complete| known, however, that AC|ction. This type of redu|y-one reduction. This ty|-one reduction which is |mplete changes is still |c-space many-one reducti|e can also be done in po|omial-time many-one redu|h only a logarithmic amo|l time it follows that i|ne reductions and it all|ype of reduction is more|e even under much weaker|er type of reduction tha|ness is the logarithmic-|is known, however, that |very computation that ca|ions and it allows us to|r reductions.[4] It is k|ince every computation t|known NP-complete proble|complete under log space|mial-time many-one reduc|-time many-one reduction|uction that can be compu|open problem. All curren|-space many-one reductio|of NP-complete changes i| logarithmic-space many-| of reductions the defin|hether under these types| open problem. All curre|polynomial-time many-one|own, however, that AC0 r|-space many-one reductio|so often used to define |ic space can also be don|-one reduction then ther|ns the definition of NP-|lete. Whether under thes| amount of space. Since | in polynomial time it f|eductions the definition|c space can also be done|ndeed, all currently kno|ss than polynomial-time |it allows us to distingu| are NP-complete under l|these types of reduction|duction which is a many-|ons the definition of NP|ation that can be done i| every computation that | reductions the definiti|on that is also often us|han polynomial-time redu|rithmic-space many-one r|y-one reductions and it |be done in polynomial ti|ithmic amount of space. |of space. Since every co|d it allows us to distin|ctly smaller class than | space can also be done |ne reduction. This type |re is a logarithmic-spac|re NP-complete under log| usual polynomial-time m|ass than polynomial-time|olynomial-time many-one |usual polynomial-time ma|wn NP-complete problems |of reductions the defini|nition of NP-complete ch|[4] It is known, however|us to distinguish more c|is also often used to de|urrently known NP-comple| refined than the more u| polynomial-time many-on|uctions the definition o|re classes such as P-com|ace many-one reduction t|time many-one reductions|tion is more refined tha|lynomial-time reductions|any-one reduction. This |tly known NP-complete pr|me many-one reduction. T|many-one reduction that |o a polynomial-time many|ion that is also often u|logarithmic amount of sp|ore refined than the mor|sses such as P-complete.|pes of reductions the de|lete changes is still an|ce many-one reduction th|em. All currently known |if there is a logarithmi|the more usual polynomia|one reductions and it al|plete even under much we|at AC0 reductions define|4] It is known, however,|l-time many-one reductio|computation that can be |rithmic space can also b|ll currently known NP-co|garithmic space can also| is known, however, that|d, all currently known N|ce. Since every computat|used to define NP-comple| can also be done in pol|s the logarithmic-space |ogarithmic-space many-on|every computation that c|only a logarithmic amoun|an also be done in polyn|roblems remain NP-comple|e reductions and it allo|er reductions.[4] It is |e done in polynomial tim|-one reduction. This typ|sed to define NP-complet|y-one reduction that can|ions define a strictly s|t can be done in logarit|to define NP-completenes|complete even under much|n then there is also a p|even under much weaker r|efine NP-completeness is|ogarithmic-space many-on|P-complete under log spa|his type of reduction is| changes is still an ope|s a many-one reduction t|d than the more usual po|rithmic amount of space.| of space. Since every c|one reduction then there|many-one reductions and |e types of reductions th|Since every computation |ten used to define NP-co|l-time many-one reductio|ction that is also often|se types of reductions t|inition of NP-complete c| then there is also a po|e reduction which is a m|er log space reductions.|n polynomial-time reduct|al-time many-one reducti|ntly known NP-complete p|s type of reduction is m|fine a strictly smaller |uction is more refined t| still an open problem. |ce every computation tha| NP-complete problems ar|omplete changes is still|ns.[4] It is known, howe|also often used to defin|ems are NP-complete unde|space can also be done i|lete problems are NP-com| to distinguish more cla|stinguish more classes s|f reduction is more refi|uted with only a logarit|that can be done in loga|types of reductions the |ne reduction which is a |fined than the more usua| Whether under these typ| can be done in logarith| which is a many-one red|ly known NP-complete pro|under log space reductio|ore usual polynomial-tim|currently known NP-compl| polynomial-time many-on| currently known NP-comp|tation that can be done |NP-complete under log sp| follows that if there i|many-one reduction which|hmic-space many-one redu|own NP-complete problems|llows that if there is a|e a strictly smaller cla|ctions and it allows us |putation that can be don| to define NP-completene|pace reductions. Indeed,|, that AC0 reductions de|s also a polynomial-time|ynomial time it follows | than the more usual pol|a strictly smaller class|hich is a many-one reduc|here is a logarithmic-sp|ined than the more usual|reductions and it allows|her type of reduction th|l an open problem. All c|ductions. Indeed, all cu|es is still an open prob|lows us to distinguish m|nown NP-complete problem| also be done in polynom|problem. All currently k|he logarithmic-space man| problems remain NP-comp| is also a polynomial-ti|till an open problem. Al|nd it allows us to disti|is type of reduction is |maller class than polyno|ses such as P-complete. |fine NP-completeness is |done in polynomial time |P-completeness is the lo|ictly smaller class than|define a strictly smalle| that can be computed wi|also a polynomial-time m|mic-space many-one reduc|e computed with only a l| reductions and it allow|ion that can be done in |on is more refined than | more classes such as P-| known NP-complete probl|-complete under log spac|ly a logarithmic amount |a logarithmic amount of |P-complete changes is st|n under much weaker redu|anges is still an open p|ions.[4] It is known, ho|ithmic space can also be|are NP-complete under lo| NP-complete even under |e of reduction that is a| computation that can be| used to define NP-compl| log space reductions. I|e many-one reduction the|lems remain NP-complete |n that is also often use|pe of reduction that is |nomial-time many-one red|ic-space many-one reduct|Indeed, all currently kn|lynomial-time many-one r|og space reductions. Ind|uction. This type of red| be computed with only a| under much weaker reduc|-time many-one reduction| is still an open proble|d to define NP-completen|log space reductions. In|uch as P-complete. Wheth|it follows that if there|tions and it allows us t|ace many-one reduction w| define NP-completeness | many-one reductions and|s such as P-complete. Wh|still an open problem. A|n. This type of reductio|ime it follows that if t|is more refined than the|ace reductions. Indeed, |lasses such as P-complet| as P-complete. Whether |-complete changes is sti|der much weaker reductio|NP-complete changes is s|blem. All currently know|omputation that can be d|mplete problems remain N|is still an open problem| a logarithmic-space man|h more classes such as P|ns and it allows us to d|be computed with only a |AC0 reductions define a |in logarithmic space can|reduction then there is |h as P-complete. Whether| time it follows that if|eductions define a stric|NP-completeness is the l|th only a logarithmic am| that is also often used|reduction that can be co| reduction. This type of|ted with only a logarith|t of space. Since every |-one reductions and it a| P-complete. Whether und|ws that if there is a lo|s. Indeed, all currently|. This type of reduction|c amount of space. Since|omplete. Whether under t|ete changes is still an |aller class than polynom|nder these types of redu|rently known NP-complete|mputed with only a logar|an open problem. All cur|duction is more refined |on which is a many-one r|an the more usual polyno|eductions. Indeed, all c|any-one reduction then t|in NP-complete even unde|ry computation that can |eduction. This type of r|any-one reductions and i|ore classes such as P-co|e more usual polynomial-|amount of space. Since e|type of reduction is mor|guish more classes such |n polynomial time it fol|e problems remain NP-com|teness is the logarithmi|ons and it allows us to |e is also a polynomial-t|on that can be computed |so a polynomial-time man|pace many-one reduction | that if there is a loga|ype of reduction that is|re usual polynomial-time|plete problems are NP-co|ime many-one reductions |hmic amount of space. Si|te. Whether under these |ly known NP-complete pro|mial-time many-one reduc|ther type of reduction t| the definition of NP-co|ften used to define NP-c|mial time it follows tha|e reduction. This type o|Another type of reductio|-completeness is the log|eductions and it allows |nomial-time reductions.[|complete. Whether under |ductions.[4] It is known|ion is more refined than|remain NP-complete even |be done in logarithmic s|nguish more classes such| be done in logarithmic |s is still an open probl|than the more usual poly|distinguish more classes| there is a logarithmic-|e reductions. Indeed, al|NP-complete even under m|ine a strictly smaller c|blems are NP-complete un|s a logarithmic-space ma|ctions.[4] It is known, |uction which is a many-o|rrently known NP-complet|complete problems remain| NP-complete under log s|there is also a polynomi|d with only a logarithmi| smaller class than poly|te even under much weake|olynomial-time many-one |uctions define a strictl|All currently known NP-c| space reductions. Indee|f reductions the definit|utation that can be done|logarithmic-space many-o|tion of NP-complete chan|e many-one reduction whi|uch weaker reductions.[4|rrently known NP-complet|-complete problems are N| types of reductions the|lete under log space red|er class than polynomial|plete problems remain NP|uctions. Indeed, all cur|me many-one reductions a|as P-complete. Whether u|ic amount of space. Sinc|es of reductions the def|one reduction that can b|polynomial-time reductio| be done in polynomial t|e in logarithmic space c|ithmic-space many-one re|. Since every computatio|weaker reductions.[4] It|is the logarithmic-space|ny-one reductions and it|in polynomial time it fo|ypes of reductions the d|computed with only a log|P-complete even under mu| weaker reductions.[4] I|mic amount of space. Sin|with only a logarithmic |nder log space reduction|ly smaller class than po|rictly smaller class tha|y-one reduction then the| polynomial time it foll|ynomial-time many-one re| logarithmic space can a|done in logarithmic spac|hmic space can also be d|ynomial-time many-one re|ny-one reduction. This t|tion that is also often |hat is also often used t|m. All currently known N| is the logarithmic-spac|ed than the more usual p|that can be computed wit|nomial time it follows t| reduction that is also |he more usual polynomial| reductions. Indeed, all|hat can be computed with| much weaker reductions.|urrently known NP-comple|lynomial time it follows|t follows that if there |ete problems are NP-comp| logarithmic amount of s|r class than polynomial-|inguish more classes suc|ed, all currently known |olynomial-time reduction|aker reductions.[4] It i|llows us to distinguish |ne NP-completeness is th|ion of NP-complete chang|hen there is also a poly|lem. All currently known|ll an open problem. All |ker reductions.[4] It is|garithmic-space many-one|er these types of reduct| known NP-complete probl|ms are NP-complete under|and it allows us to dist|a logarithmic-space many|uction then there is als|o often used to define N|l currently known NP-com| NP-complete changes is |here is also a polynomia| is also often used to d|asses such as P-complete|such as P-complete. Whet|f there is a logarithmic|thmic-space many-one red|allows us to distinguish|there is a logarithmic-s|Whether under these type|ctions define a strictly| strictly smaller class |y known NP-complete prob|. Whether under these ty|tion that can be done in|ount of space. Since eve|mic-space many-one reduc|ete. Whether under these|strictly smaller class t|ll currently known NP-co|one in logarithmic space|n be computed with only |der log space reductions|the logarithmic-space ma|en problem. All currentl|changes is still an open|ain NP-complete even und|currently known NP-compl|wever, that AC0 reductio| the more usual polynomi|nown NP-complete problem| reductions define a str|e in polynomial time it |tions.[4] It is known, h|
Another type of reduction that is also often used to define NP-completeness is the logarithmic-space many-one reduction which is a many-one reduction that can be computed with only a logarithmic amount of space. Since every computation that can be done in logarithmic space can also be done in polynomial time it follows that if there is a logarithmic-space many-one reduction then there is also a polynomial-time many-one reduction. This type of reduction is more refined than the more usual polynomial-time many-one reductions and it allows us to distinguish more classes such as P-complete. Whether under these types of reductions the definition of NP-complete changes is still an open problem. All currently known NP-complete problems are NP-complete under log space reductions. Indeed, all currently known NP-complete problems remain NP-complete even under much weaker reductions.[4] It is known, however, that AC0 reductions define a strictly smaller class than polynomial-time reductions.[5]
|similar name, but are not to|this field can be applied to| Sometimes referred to as ge|nal evolutionary biology is |lutionary computation is not|biology, Computational evolu| inherently a part of comput|ms computational biology and|netic algorithms, the resear|name, but are not to be conf|nal biology and evolutionary|ield can be applied to compu| is not inherently a part of| a part of computational bio|pplied to computational biol|utation is not inherently a |nal biology. While evolution|.[4] The terms computational|ideas of evolution across sp| of this field can be applie|ncerned with modeling and an| It instead creates algorith|enetic algorithms, the resea|d creates algorithms based o|not inherently a part of com|he late 1990s, computational|etimes referred to as geneti| to computational biology. W|nary biology is a subfield o|are not to be confused. Unli|ary computation have a simil|ecome an important part of d|oss species. Sometimes refer| computational biology and e| technologies for the field |mputational biology has beco|onal biology, evolutionary c|d of biology.[4] The terms c|putational evolutionary biol|ology is a subfield of it.[5|ional biology and evolutiona|he field of biology.[4] The |with modeling and analyzing |ometimes referred to as gene|volutionary computation have|orithms based on the ideas o|ic algorithms, the research |eas of evolution across spec|t of computational biology, |echnologies for the field of|ionary computation is not in|ar name, but are not to be c|l evolutionary biology is a |, evolutionary computation i|ology, Computational evoluti|ng technologies for the fiel|ithms, the research of this |ing technologies for the fie| and evolutionary computatio|utational biology, evolution|the research of this field c|. Sometimes referred to as g|erred to as genetic algorith|an be applied to computation|ly a part of computational b| biology, evolutionary compu|n the ideas of evolution acr|y biology is a subfield of i|ate 1990s, computational bio|ary computation is not conce|erging technologies for the |tion is not concerned with m|gy and evolutionary computat|or the field of biology.[4] |y computation have a similar|inherently a part of computa|lution across species. Somet|e applied to computational b|utionary computation have a |to computational biology. Wh|hile evolutionary computatio|ion across species. Sometime|erned with modeling and anal|red to as genetic algorithms|[4] The terms computational |utational biology and evolut|gorithms, the research of th| creates algorithms based on|ecies. Sometimes referred to|4] The terms computational b|become an important part of |of this field can be applied|ogy and evolutionary computa| algorithms, the research of|tly a part of computational |nal biology has become an im| computation is not concerne|iology. While evolutionary c|erently a part of computatio|g emerging technologies for |e an important part of devel|lyzing biological data. It i|reates algorithms based on t|putation have a similar name|algorithms, the research of |technologies for the field o|re not to be confused. Unlik|y has become an important pa| can be applied to computati|herently a part of computati| developing emerging technol|ant part of developing emerg|is not concerned with modeli|iology, evolutionary computa|es. Sometimes referred to as|biology has become an import|omputational biology. While | Computational evolutionary |ross species. Sometimes refe|gy. While evolutionary compu|ional evolutionary biology i|ogy.[4] The terms computatio| Unlike computational biolog|volutionary computation is n|omputational biology and evo|field can be applied to comp| with modeling and analyzing|o as genetic algorithms, the|e computational biology, evo|thms, the research of this f|l biology and evolutionary c|al biology, evolutionary com|ithms based on the ideas of |ologies for the field of bio|hnologies for the field of b| similar name, but are not t|. It instead creates algorit|nt part of developing emergi|n is not inherently a part o|of biology.[4] The terms com|, the research of this field|ch of this field can be appl|biology is a subfield of it.|ce the late 1990s, computati|rt of developing emerging te| not concerned with modeling|ta. It instead creates algor|onary computation have a sim|putational biology. While ev|evolutionary computation hav|ike computational biology, e|putational biology has becom|search of this field can be |e late 1990s, computational |utionary biology is a subfie|ation have a similar name, b| is not concerned with model|cross species. Sometimes ref| evolutionary computation is|tionary computation is not i|volution across species. Som|f computational biology, Com|not to be confused. Unlike c|s of evolution across specie|ation is not concerned with | emerging technologies for t|mputational biology, evoluti| confused. Unlike computatio|but are not to be confused. |lutionary computation is not|ionary biology is a subfield| has become an important par|y computation is not concern|me, but are not to be confus|etic algorithms, the researc|n have a similar name, but a|t of developing emerging tec| evolutionary computation ha|t part of developing emergin|0s, computational biology ha|rt of computational biology,| genetic algorithms, the res|eling and analyzing biologic|ing emerging technologies fo|putational biology, evolutio|ology has become an importan|rms computational biology an|emerging technologies for th|omputation have a similar na|biology.[4] The terms comput|ld of biology.[4] The terms |eloping emerging technologie|ology. While evolutionary co|stead creates algorithms bas|computational biology, Compu|deling and analyzing biologi| and analyzing biological da|applied to computational bio|hms based on the ideas of ev| name, but are not to be con|ing biological data. It inst|on is not inherently a part |e terms computational biolog|f developing emerging techno|s genetic algorithms, the re|le evolutionary computation |Unlike computational biology|s become an important part o| evolutionary computation is|s, the research of this fiel|terms computational biology |tational evolutionary biolog|ogical data. It instead crea| modeling and analyzing biol|ferred to as genetic algorit|lgorithms based on the ideas|the late 1990s, computationa|nologies for the field of bi|computational biology has be|ology.[4] The terms computat|tational biology and evoluti|ned with modeling and analyz|ling and analyzing biologica|s field can be applied to co|putational biology, Computat|erms computational biology a|tionary biology is a subfiel|ke computational biology, ev|tionary computation have a s|ation is not inherently a pa|of developing emerging techn|tational biology. While evol|t instead creates algorithms| analyzing biological data. |has become an important part|es for the field of biology.|g and analyzing biological d| not to be confused. Unlike |l biology, evolutionary comp|art of computational biology|onal biology and evolutionar|nalyzing biological data. It|gy, Computational evolutiona|to be confused. Unlike compu| be applied to computational|90s, computational biology h|on across species. Sometimes|f evolution across species. |sed. Unlike computational bi|, computational biology has | referred to as genetic algo|olution across species. Some|s for the field of biology.[|chnologies for the field of |s computational biology and |part of developing emerging | field can be applied to com|me an important part of deve|esearch of this field can be|omputational evolutionary bi|late 1990s, computational bi|as genetic algorithms, the r| on the ideas of evolution a|ational biology, evolutionar|ary biology is a subfield of|ies for the field of biology| to be confused. Unlike comp| based on the ideas of evolu| the research of this field |Since the late 1990s, comput|utionary computation is not |ed on the ideas of evolution|e research of this field can|g technologies for the field|art of developing emerging t| late 1990s, computational b|ional biology has become an | a similar name, but are not|ional biology, evolutionary | of evolution across species|have a similar name, but are| The terms computational bio|cies. Sometimes referred to | part of computational biolo|utational biology has become|is field can be applied to c| evolution across species. S|, but are not to be confused|odeling and analyzing biolog|gy.[4] The terms computation|nary computation is not conc|ot inherently a part of comp|nfused. Unlike computational|n be applied to computationa|a. It instead creates algori|he ideas of evolution across|ion have a similar name, but|logy and evolutionary comput|ional biology, Computational|ed. Unlike computational bio|. While evolutionary computa|d evolutionary computation h|nary computation have a simi|s species. Sometimes referre|ied to computational biology|. Unlike computational biolo|ng and analyzing biological |mputational biology. While e|omputation is not concerned |iology is a subfield of it.[| biology. While evolutionary|species. Sometimes referred |t concerned with modeling an|s, computational biology has|cal data. It instead creates|eld can be applied to comput|ed to computational biology.|ping emerging technologies f|computation is not inherentl|ion is not concerned with mo|imes referred to as genetic |logy. While evolutionary com|volutionary biology is a sub|ology and evolutionary compu|on is not concerned with mod| algorithms based on the ide|milar name, but are not to b|iological data. It instead c|instead creates algorithms b|important part of developing|rging technologies for the f|e a similar name, but are no|al evolutionary biology is a|rred to as genetic algorithm|gies for the field of biolog|biological data. It instead |h modeling and analyzing bio|he research of this field ca|field of biology.[4] The ter| computation is not inherent|ogies for the field of biolo|he terms computational biolo|o be confused. Unlike comput|es referred to as genetic al|ionary computation have a si|mputational evolutionary bio|for the field of biology.[4]| be confused. Unlike computa|ry computation is not inhere| applied to computational bi| an important part of develo|utational evolutionary biolo|across species. Sometimes re|eveloping emerging technolog| biology and evolutionary co|utational biology, Computati|ical data. It instead create|nal biology, Computational e|an important part of develop|n across species. Sometimes |tic algorithms, the research| computation have a similar |ogy, Computational evolution|portant part of developing e|s based on the ideas of evol|ion is not inherently a part|creates algorithms based on | computational biology, Comp|gy has become an important p|onfused. Unlike computationa|es algorithms based on the i|ology, evolutionary computat|mes referred to as genetic a|putational biology and evolu|metimes referred to as genet|tional biology, Computationa|arch of this field can be ap|referred to as genetic algor|nal biology, evolutionary co|a similar name, but are not |d to as genetic algorithms, |olutionary computation is no|tional biology. While evolut|iology and evolutionary comp|hms, the research of this fi|fused. Unlike computational |ve a similar name, but are n| concerned with modeling and|to as genetic algorithms, th|logy, evolutionary computati|l biology. While evolutionar|The terms computational biol|l biology has become an impo|utation is not concerned wit|y, Computational evolutionar|y computation is not inheren| important part of developin|tion have a similar name, bu|g biological data. It instea|al biology, Computational ev|d can be applied to computat|990s, computational biology |r name, but are not to be co|ionary computation is not co|al data. It instead creates | computational biology, evol|confused. Unlike computation|y.[4] The terms computationa|e confused. Unlike computati|and evolutionary computation| data. It instead creates al|his field can be applied to |gy, evolutionary computation| instead creates algorithms |1990s, computational biology|tation is not concerned with|ince the late 1990s, computa|t are not to be confused. Un|ms based on the ideas of evo|onary computation is not inh|biology and evolutionary com|f biology.[4] The terms comp| have a similar name, but ar|rently a part of computation|ata. It instead creates algo| biological data. It instead|rned with modeling and analy|oping emerging technologies |computational biology, evolu| computational biology has b|biology, evolutionary comput|algorithms based on the idea| this field can be applied t|modeling and analyzing biolo|lutionary computation have a|nd evolutionary computation |not concerned with modeling |loping emerging technologies|putation is not concerned wi|rithms, the research of this|ut are not to be confused. U|used. Unlike computational b|yzing biological data. It in|ry computation have a simila|ing and analyzing biological|logy.[4] The terms computati|iology.[4] The terms computa|Computational evolutionary b|mputational biology, Computa|come an important part of de| the ideas of evolution acro|al biology has become an imp|eferred to as genetic algori|d. Unlike computational biol|evolutionary biology is a su|e evolutionary computation i| part of developing emerging|tant part of developing emer|research of this field can b|data. It instead creates alg|nary computation is not inhe|omputational biology, Comput|d on the ideas of evolution |the ideas of evolution acros|th modeling and analyzing bi|ational biology. While evolu|evolutionary computation is |part of computational biolog|ational evolutionary biology| research of this field can | terms computational biology|y a part of computational bi|ological data. It instead cr|tead creates algorithms base|merging technologies for the|ed to as genetic algorithms,|f this field can be applied |be confused. Unlike computat|tational biology, Computatio|imilar name, but are not to |ng emerging technologies for|e not to be confused. Unlike|veloping emerging technologi|analyzing biological data. I|ed with modeling and analyzi|ot concerned with modeling a|tation is not inherently a p|d to computational biology. |mportant part of developing |nd analyzing biological data|on the ideas of evolution ac| biology.[4] The terms compu|te 1990s, computational biol|logical data. It instead cre|a part of computational biol|Sometimes referred to as gen|orithms, the research of thi|omputational biology, evolut| the field of biology.[4] Th|mputation have a similar nam|c algorithms, the research o|ational biology and evolutio|is not inherently a part of |biology. While evolutionary | species. Sometimes referred|e field of biology.[4] The t|e the late 1990s, computatio|tational biology has become |d analyzing biological data.|deas of evolution across spe|ies. Sometimes referred to a|onary biology is a subfield |ng biological data. It inste|tation have a similar name, |ased on the ideas of evoluti|logy, Computational evolutio|, Computational evolutionary|tional biology, evolutionary|ot to be confused. Unlike co|onal evolutionary biology is|al biology. While evolutiona|rch of this field can be app| as genetic algorithms, the |oncerned with modeling and a|computational biology. While|eates algorithms based on th|t to be confused. Unlike com|iology has become an importa|logies for the field of biol|ave a similar name, but are |s not concerned with modelin|e ideas of evolution across | the late 1990s, computation|ogy has become an important | are not to be confused. Unl|as of evolution across speci|s algorithms based on the id|gical data. It instead creat|ome an important part of dev|lied to computational biolog| but are not to be confused.| While evolutionary computat| not inherently a part of co|tion across species. Sometim|logy is a subfield of it.[5]| of biology.[4] The terms co|olutionary computation have |] The terms computational bi|ational biology has become a|genetic algorithms, the rese| 1990s, computational biolog|h of this field can be appli|ith modeling and analyzing b|of computational biology, Co|l biology, Computational evo|alyzing biological data. It |onal biology. While evolutio|onal biology, Computational |rithms based on the ideas of|onal biology has become an i|ead creates algorithms based|d with modeling and analyzin|mputational biology and evol| of developing emerging tech|evolution across species. So|ry biology is a subfield of |ry computation is not concer|ogy. While evolutionary comp|times referred to as genetic|y, evolutionary computation | biology, Computational evol|sed on the ideas of evolutio|ld can be applied to computa|as become an important part |gorithms based on the ideas |ame, but are not to be confu|s not inherently a part of c|ogy, evolutionary computatio|lutionary biology is a subfi|tional evolutionary biology |y and evolutionary computati|thms based on the ideas of e|nlike computational biology,|ging technologies for the fi|logy has become an important|of evolution across species.|mputation is not concerned w|evolutionary computation is |nherently a part of computat|eld of biology.[4] The terms|ield of biology.[4] The term|can be applied to computatio|iology, Computational evolut|e, but are not to be confuse|ms, the research of this fie|onary computation is not con|utation have a similar name,|computation have a similar n| field of biology.[4] The te|developing emerging technolo|n is not concerned with mode|ilar name, but are not to be|s referred to as genetic alg|tionary computation is not c|ntly a part of computational|earch of this field can be a| biology has become an impor|tational biology, evolutiona|olutionary biology is a subf|omputational biology has bec|It instead creates algorithm|nstead creates algorithms ba|ary computation is not inher|o computational biology. Whi|putation is not inherently a| ideas of evolution across s|on have a similar name, but |computational biology and ev|ently a part of computationa|zing biological data. It ins|e 1990s, computational biolo|rtant part of developing eme|t inherently a part of compu| of computational biology, C|al biology and evolutionary |ates algorithms based on the|utational biology. While evo| to as genetic algorithms, t| biology is a subfield of it|tes algorithms based on the |s. Sometimes referred to as |ional biology. While evoluti|ution across species. Someti|omputation is not inherently|ortant part of developing em|volutionary computation is n|cerned with modeling and ana|r the field of biology.[4] T|tional biology has become an|tion is not inherently a par| computational biology. Whil| across species. Sometimes r|be applied to computational |computation is not concerned|l data. It instead creates a|like computational biology, |the field of biology.[4] The|ile evolutionary computation|nce the late 1990s, computat|ational biology, Computation|ad creates algorithms based | become an important part of|y. While evolutionary comput| evolutionary biology is a s|plied to computational biolo|lar name, but are not to be |ss species. Sometimes referr|tional biology and evolution|concerned with modeling and |based on the ideas of evolut|olutionary computation is no|and analyzing biological dat|While evolutionary computati| for the field of biology.[4|pecies. Sometimes referred t|n important part of developi|lgorithms, the research of t|mputation is not inherently |utionary computation is not |
Since the late 1990s, computational biology has become an important part of developing emerging technologies for the field of biology.[4] The terms computational biology and evolutionary computation have a similar name, but are not to be confused. Unlike computational biology, evolutionary computation is not concerned with modeling and analyzing biological data. It instead creates algorithms based on the ideas of evolution across species. Sometimes referred to as genetic algorithms, the research of this field can be applied to computational biology. While evolutionary computation is not inherently a part of computational biology, Computational evolutionary biology is a subfield of it.[5]
|tware progra|uting, data |logical data|re programs |stem theory,|ograms that |heoretical f|orithms in t|n theoretica|n theory, an|gful informa|dations such|system theor|ation involv|ams that use|mage process|cal foundati|oduce meanin|g and runnin|e processing|hms from gra| data mining|, artificial|s, control t|screte mathe|n depend on |s in turn de|tion. The al|al foundatio| meaningful |a to produce|thms from gr|oftware prog|ning softwar|t computing,|on involves | mathematics|se algorithm| statistics.|epend on the|ons such as |ningful info|ical data to|ata mining, |, and comput|rocessing, a|produce mean| in turn dep|olves writin|on. The algo|ting, data m| that use al|rete mathema|tion involve| programs th|er simulatio|processing, |m theory, in| foundations|heory, artif|ce, soft com|writing and |, system the|ystem theory|ormation inv|computing, d| depend on t|ion. The alg|ns such as d|yzing biolog|simulation. | mining, ima|y, informati|e mathematic|, data minin|roduce meani|gical data t| as discrete|hematics, co|programs tha|s from graph|ining, image|ial intellig|ulation. The|al intellige|, control th|, informatio|ry, informat|l intelligen|imulation. T|volves writi|nvolves writ|discrete mat|ms in turn d|es writing a|cal data to |ting and run|formation in|mation invol|ng biologica|ing software|essing, and | discrete ma|nd on theore|ter simulati|as discrete |lyzing biolo|ng, and comp|y, system th|hat use algo| on theoreti|raph theory,|tics, contro|d on theoret|ormation the|ingful infor|gorithms fro|theoretical |puting, data|image proces| The algorit|oretical fou|ry, system t|ence, soft c|use algorith| such as dis|lation. The |ical foundat|g, and compu|omputer simu|ions such as|ng and runni|ndations suc| involves wr|mputer simul|ithms in tur|ogical data |rithms from |crete mathem|eoretical fo|tical founda|formation th|iological da| information|rtificial in|ful informat| intelligenc|ng, data min|ation theory| from graph |mation theor|grams that u|s that use a|mputing, dat|computer sim|trol theory,|duce meaning|retical foun|ing biologic|on theory, a|lgorithms fr|d computer s|ing and runn| control the|ory, artific| graph theor|t use algori|ematics, con|nd running s|ch as discre|g, image pro|e meaningful|ves writing |meaningful i|ithms from g| use algorit|The algorith|ol theory, s| image proce|software pro| and compute|l theory, sy|soft computi|information |eaningful in|m graph theo|ftware progr|ntelligence,|aningful inf|matics, cont|thms in turn|mining, imag|em theory, i|alyzing biol|d statistics|theory, info|data mining,|ocessing, an|. The algori|ning, image |Analyzing bi|ta mining, i|a mining, im|, soft compu| computing, |e algorithms|nd statistic| algorithms |running soft|oundations s|mulation. Th|nalyzing bio|lves writing|ory, informa| simulation.|eory, inform|intelligence| to produce |such as disc|algorithms f|e programs t|rmation theo|rn depend on|eory, system|from graph t|ry, and stat|etical found|lligence, so|aph theory, |ge processin|s discrete m|puter simula|eory, and st|h as discret|undations su|ngful inform|gence, soft |l foundation| theory, inf|n. The algor|ry, artifici|ificial inte|al data to p| system theo| processing,|g, data mini| soft comput|om graph the|graph theory|g software p|age processi|ms that use |n involves w|theory, arti| software pr|gorithms in |ata to produ| theoretical| and running|ul informati|foundations |in turn depe|ft computing|ing, image p|are programs|ware program| running sof|involves wri|nning softwa|e algorithms|ion involves|tem theory, |zing biologi|ssing, and c|tion theory,|sing, and co|oft computin|nformation t|cial intelli|ta to produc|data to prod| data to pro|ontrol theor|e, soft comp|r simulation|iscrete math|tions such a|ing, data mi|ing, and com| and statist|pend on theo|on theoretic|rograms that|unning softw|atics, contr|ce meaningfu|o produce me|ory, and sta|at use algor|s writing an|and computer|nd computer |control theo| artificial |thematics, c|l data to pr|h theory, ar|athematics, |ph theory, a|y, artificia|g biological|uce meaningf|uter simulat|y, and stati| information|turn depend |rams that us|heory, and s|ological dat|heory, syste|iting and ru|cessing, and|depend on th|rmation invo|theory, and |mathematics,| theory, and|ation. The a|telligence, |s such as di|algorithms i|theory, syst|elligence, s|ntrol theory|igence, soft|ng software |biological d| computer si|rithms in tu|, and statis|, image proc|n turn depen|rol theory, |information |hms in turn |nce, soft co|tificial int|ory, system |ligence, sof|heory, infor| produce mea|orithms from| algorithms |to produce m| turn depend|ng, image pr| theory, art|end on theor|he algorithm|te mathemati|ms from grap|nformation i|omputing, da|lgorithms in|and running |ficial intel|that use alg|ete mathemat|riting and r|and statisti|ion theory, |rom graph th|cs, control |urn depend o|ations such |eory, artifi|artificial i|uch as discr|d running so|ics, control|icial intell| theory, sys| writing and| biological |l informatio|
Analyzing biological data to produce meaningful information involves writing and running software programs that use algorithms from graph theory, artificial intelligence, soft computing, data mining, image processing, and computer simulation. The algorithms in turn depend on theoretical foundations such as discrete mathematics, control theory, system theory, information theory, and statistics.
|atic speech recognition|tomatic recognition of | of human faces, or han|cognition, classificati|f human faces, or handw|ion techniques are auto|techniques are automati|ic image analysis of pa|m/non-spam email messag| with digital images as| forms.[7] The last two|ral categories (e.g., s|ies (e.g., spam/non-spa|al codes on postal enve| of pattern recognition|rn recognition that dea|nition of handwritten p|ques are automatic spee|tic speech recognition,|wo examples form the su|recognition systems.[8]| of handwritten postal |tomatic speech recognit|stal codes on postal en|of pattern recognition |to several categories (|re automatic speech rec|, spam/non-spam email m|am email messages), the| subtopic image analysi|o pattern recognition s|l images as input to pa|spam/non-spam email mes|orm the subtopic image |last two examples form |ategories (e.g., spam/n| images as input to pat|recognition techniques | input to pattern recog|nition that deals with |matic recognition of im|ognition that deals wit|ech recognition, classi|m email messages), the |s of pattern recognitio|ic speech recognition, |es form the subtopic im|f pattern recognition t|e last two examples for|ch recognition, classif|), the automatic recogn|n that deals with digit|cognition techniques ar|to pattern recognition |automatic recognition o|ut to pattern recogniti|als with digital images|s on postal envelopes, |subtopic image analysis|tern recognition techni|f text into several cat|-spam email messages), |with digital images as |gnition, classification|n, classification of te|andwritten postal codes|into several categories|en postal codes on post| that deals with digita|pic image analysis of p|ages), the automatic re|ic recognition of handw|h recognition, classifi| into several categorie|e subtopic image analys|the subtopic image anal|om medical forms.[7] Th|postal envelopes, autom|tion, classification of|ognition of handwritten|r typical applications |al forms.[7] The last t|ical applications of pa|f handwritten postal co| human faces, or handwr|gnition of images of hu|rom medical forms.[7] T|c speech recognition, c| examples form the subt|ognition techniques are|es on postal envelopes,|recognition that deals |iques are automatic spe|recognition, classifica|lications of pattern re|ations of pattern recog|classification of text |ages of human faces, or|ues are automatic speec|pam/non-spam email mess|xtraction from medical |nto several categories |ical forms.[7] The last|ges), the automatic rec|on of text into several| The last two examples |at deals with digital i|attern recognition tech|o several categories (e|es, automatic recogniti| or handwriting image e|es), the automatic reco| postal codes on postal|tion of handwritten pos|lysis of pattern recogn|th digital images as in|s, automatic recognitio|am/non-spam email messa|mage analysis of patter|pattern recognition tha|s), the automatic recog|des on postal envelopes|ges as input to pattern|forms.[7] The last two |cognition systems.[8][9|er typical applications|fication of text into s|Other typical applicati|pical applications of p|chniques are automatic |n recognition technique| techniques are automat|s input to pattern reco|ndwritten postal codes |n of text into several |on, classification of t|nput to pattern recogni|ubtopic image analysis |es are automatic speech|tion that deals with di|lassification of text i|echniques are automatic|on of images of human f|ion of text into severa|l messages), the automa|cognition of images of |pes, automatic recognit|utomatic recognition of|ls with digital images |speech recognition, cla|traction from medical f|cal forms.[7] The last | of pattern recognition|cognition that deals wi|age extraction from med|ction from medical form|automatic recognition o|.[7] The last two examp|images of human faces, |n-spam email messages),|h digital images as inp|ecognition systems.[8][|ognition systems.[8][9]|ecognition techniques a|attern recognition that|postal codes on postal |two examples form the s|ition, classification o|ge extraction from medi|peech recognition, clas| medical forms.[7] The |mage extraction from me| handwritten postal cod|codes on postal envelop|writing image extractio| messages), the automat| (e.g., spam/non-spam e| are automatic speech r|al categories (e.g., sp|tegories (e.g., spam/no|image analysis of patte|ast two examples form t|btopic image analysis o|opic image analysis of |r handwriting image ext| extraction from medica| from medical forms.[7]|niques are automatic sp|on of handwritten posta|as input to pattern rec|nvelopes, automatic rec| pattern recognition th|f pattern recognition t|ttern recognition syste| last two examples form|automatic speech recogn|pattern recognition sys|rn recognition techniqu|from medical forms.[7] |action from medical for|dwriting image extracti|cation of text into sev|ysis of pattern recogni|tal envelopes, automati|n postal envelopes, aut|of images of human face|topic image analysis of|written postal codes on| handwriting image extr|deals with digital imag|utomatic speech recogni|an faces, or handwritin|l envelopes, automatic |images as input to patt|applications of pattern|nition, classification |n recognition systems.[|mages as input to patte|ssages), the automatic |ttern recognition that |xamples form the subtop|of pattern recognition |] The last two examples| digital images as inpu|he automatic recognitio| several categories (e.|examples form the subto|ttern recognition techn|ic recognition of image|ern recognition techniq|es (e.g., spam/non-spam| recognition, classific|tions of pattern recogn|ostal codes on postal e|edical forms.[7] The la|velopes, automatic reco|alysis of pattern recog|mples form the subtopic|n recognition that deal| typical applications o|ern recognition systems|s.[7] The last two exam|handwritten postal code| of images of human fac|n postal codes on posta|are automatic speech re|ognition of images of h| on postal envelopes, a| pattern recognition sy|itten postal codes on p|input to pattern recogn|recognition of handwrit| recognition systems.[8|non-spam email messages|c recognition of images|ting image extraction f|ten postal codes on pos|ition that deals with d|atic recognition of ima|o examples form the sub|eech recognition, class|es as input to pattern |aces, or handwriting im|digital images as input|handwriting image extra|t into several categori|orms.[7] The last two e|tomatic recognition of |s are automatic speech |plications of pattern r|xt into several categor|ion that deals with dig|tic recognition of hand| codes on postal envelo|t deals with digital im|gnition techniques are |ons of pattern recognit|the automatic recogniti|st two examples form th|omatic recognition of i|veral categories (e.g.,|that deals with digital|gnition that deals with|, the automatic recogni| pattern recognition te|ecognition that deals w|ritten postal codes on |amples form the subtopi|cations of pattern reco|e.g., spam/non-spam ema|dical forms.[7] The las|faces, or handwriting i|on that deals with digi|tion of images of human|ications of pattern rec|7] The last two example| image analysis of patt|opes, automatic recogni|l forms.[7] The last tw|he subtopic image analy|s, or handwriting image|utomatic recognition of| automatic recognition |al images as input to p|ng image extraction fro|hat deals with digital |on from medical forms.[|pplications of pattern |s (e.g., spam/non-spam |ication of text into se|, classification of tex|ion from medical forms.|l applications of patte|ern recognition that de|stal envelopes, automat|c recognition of handwr|ples form the subtopic |raction from medical fo|cognition of handwritte|hniques are automatic s|s of pattern recognitio|The last two examples f| postal envelopes, auto|lopes, automatic recogn|he last two examples fo|ail messages), the auto|nition techniques are a|of human faces, or hand|ypical applications of | recognition techniques|attern recognition syst|riting image extraction|rn recognition systems.| deals with digital ima|ecognition, classificat| categories (e.g., spam| images of human faces,| automatic speech recog|ification of text into |matic recognition of ha|s as input to pattern r|tern recognition that d|her typical application|al envelopes, automatic|of handwritten postal c| speech recognition, cl|pam email messages), th|s with digital images a|messages), the automati|, automatic recognition|several categories (e.g|ing image extraction fr|image extraction from m| of text into several c|n techniques are automa|ge analysis of pattern |rm the subtopic image a|assification of text in|of text into several ca|recognition of images o|, or handwriting image |(e.g., spam/non-spam em|atic recognition of han| to pattern recognition|ries (e.g., spam/non-sp|il messages), the autom|ces, or handwriting ima| applications of patter| image extraction from |ition of handwritten po|gories (e.g., spam/non-|e extraction from medic|ation of text into seve|on-spam email messages)|tion from medical forms|ssification of text int|form the subtopic image|iting image extraction |e automatic speech reco|les form the subtopic i|tion techniques are aut|matic speech recognitio|e automatic recognition|uman faces, or handwrit| faces, or handwriting |odes on postal envelope|tal images as input to |age analysis of pattern|tion of text into sever|categories (e.g., spam/|ms.[7] The last two exa|n of handwritten postal| analysis of pattern re|ges of human faces, or |ion of handwritten post| envelopes, automatic r| as input to pattern re|g., spam/non-spam email|sages), the automatic r|gital images as input t|t two examples form the|l codes on postal envel|omatic recognition of h|m medical forms.[7] The|elopes, automatic recog|ion of images of human |cal applications of pat| spam/non-spam email me|l categories (e.g., spa| recognition of handwri|g image extraction from|on techniques are autom| the automatic recognit| two examples form the |m the subtopic image an|ition techniques are au| the subtopic image ana|n faces, or handwriting|al applications of patt|s form the subtopic ima| recognition that deals|nalysis of pattern reco|andwriting image extrac|[7] The last two exampl|tten postal codes on po|ecognition of handwritt|ostal envelopes, automa|ions of pattern recogni| form the subtopic imag|t to pattern recognitio|mages of human faces, o|s of human faces, or ha|ext into several catego|eals with digital image|analysis of pattern rec|or handwriting image ex|ital images as input to|extraction from medical|tern recognition system|put to pattern recognit|.g., spam/non-spam emai|f images of human faces|c image analysis of pat| text into several cate|essages), the automatic|nition of images of hum|tic recognition of imag|sification of text into|es, or handwriting imag|., spam/non-spam email |ns of pattern recogniti|tal codes on postal env|eral categories (e.g., |ndwriting image extract|e analysis of pattern r|man faces, or handwriti|email messages), the au|mail messages), the aut|dwritten postal codes o|is of pattern recogniti|ages as input to patter|typical applications of|es of human faces, or h|ith digital images as i|rms.[7] The last two ex|pattern recognition tec|gnition of handwritten |text into several categ| automatic recognition |medical forms.[7] The l|sis of pattern recognit|igital images as input |ther typical applicatio|ognition, classificatio| classification of text|/non-spam email message|ories (e.g., spam/non-s|ion, classification of |everal categories (e.g.|spam email messages), t|envelopes, automatic re|ition of images of huma|on postal envelopes, au|n from medical forms.[7|egories (e.g., spam/non| recognition of images |ecognition of images of|n of images of human fa|omatic speech recogniti| email messages), the a|human faces, or handwri|
Other typical applications of pattern recognition techniques are automatic speech recognition, classification of text into several categories (e.g., spam/non-spam email messages), the automatic recognition of handwritten postal codes on postal envelopes, automatic recognition of images of human faces, or handwriting image extraction from medical forms.[7] The last two examples form the subtopic image analysis of pattern recognition that deals with digital images as input to pattern recognition systems.[8][9]
|ake boundari|f k depends |hen k = 1) i|etween class| effect of n|es of k redu| class is pr|t choice of | k depends u|t make bound|t. A good k | noise on th|uristic tech|perparameter|s called the|istinct. A g|cial case wh|y various he| called the |mization). T|is called th|s of the clo|nct. A good |he class of | can be sele|epends upon |the class is| predicted t|e class is p|s less disti|on the data;|earest neigh|se on the cl|elected by v|ues of k red| optimizatio|tion). The s|n the data; | k reduce th|e the class |istic techni|the effect o| classificat| the class i|ss of the cl|on,[5] but m|e boundaries|boundaries b|ion). The sp|chniques (se|iques (see h|e selected b|s heuristic | various heu|ted by vario|ation,[5] bu|s is predict|aining sampl|ification,[5|ata; general|(i.e. when k|between clas|. A good k c|(see hyperpa|be the class|ta; generall|arameter opt|he class is |bor algorith|tion,[5] but|ining sample|led the near|ng sample (i|k depends up|euristic tec|es less dist|parameter op|f k reduce t|se where the|e where the |en classes l| less distin|n). The spec|f the closes|en k = 1) is|s distinct. |ass of the c|tic techniqu|ques (see hy| of k reduce|re the class|ecial case w|by various h|ke boundarie|lassificatio|; generally,| by various |e class of t|he special c|d k can be s|ies between |e data; gene|d by various|lasses less |t of noise o|when k = 1) |le (i.e. whe|cation,[5] b| between cla|hyperparamet|make boundar|sample (i.e.|rally, large| the classif|undaries bet|est training|e of k depen|r optimizati|alled the ne|us heuristic|values of k |n be selecte|] but make b| depends upo|good k can b|t neighbor a|class is pre|er values of| generally, |eter optimiz|c techniques| is called t|ious heurist|ct of noise |classes less|ation). The |ut make boun| hyperparame|neighbor alg|he effect of|the closest | classes les|oice of k de|lected by va|arious heuri|cted to be t|, larger val|arest neighb|fect of nois|n k = 1) is | = 1) is cal|n,[5] but ma|od k can be |zation). The|es between c|erparameter |be selected |ization). Th| the effect |imization). |ct. A good k|ample (i.e. |). The speci|een classes | closest tra|= 1) is call| boundaries |lass is pred|ect of noise|e hyperparam|tween classe|data; genera|where the cl|g sample (i.|icted to be | reduce the |The special |sification,[| make bounda|hbor algorit|ess distinct| (i.e. when |here the cla|alues of k r|he nearest n|a; generally|distinct. A |oundaries be|he classific|heuristic te|ends upon th|reduce the e|ee hyperpara|ic technique| (see hyperp|ndaries betw|nerally, lar|see hyperpar|optimization|oise on the |mple (i.e. w|training sam|arger values| sample (i.e|assification|,[5] but mak| larger valu|ptimization)|yperparamete| selected by|redicted to |the class of|ed the neare|rious heuris| values of k|techniques (|e the effect|uce the effe|ication,[5] | but make bo|k = 1) is ca|ed to be the|e (i.e. when|enerally, la|sses less di| to be the c|but make bou| of noise on|e best choic|ter optimiza|generally, l|upon the dat| class of th|d the neares|[5] but make|ion,[5] but |ries between|less distinc|t training s|cted by vari|e effect of |al case wher|ple (i.e. wh|e classifica|ise on the c|special case|st choice of|asses less d|y, larger va| k = 1) is c|of the close|nearest neig| training sa|he closest t|osest traini|ice of k dep|hniques (see| nearest nei| A good k ca|5] but make |ues (see hyp|nds upon the|raining samp|timization).|aries betwee| choice of k|s between cl|of k depends|ected by var|k reduce the|k can be sel|e nearest ne| of k depend|rameter opti|n classes le|ase where th|ssification,|stinct. A go|to be the cl| on the clas|daries betwe| heuristic t| be selected|ss distinct.|ood k can be|lues of k re|noise on the|ted to be th|ss is predic|selected by |1) is called|called the n|pon the data|losest train|erally, larg|ed by variou|effect of no|of k reduce | is predicte|n the classi|choice of k |tinct. A goo|ce of k depe|on). The spe|ween classes|ger values o|rparameter o| the class o|stic techniq|niques (see | the nearest| neighbor al|ds upon the |A good k can| data; gener|.e. when k =|ous heuristi|ses less dis|ing sample (|ighbor algor|r algorithm.|best choice | 1) is calle|. The specia|ass is predi|sest trainin|depends upon|e closest tr|he data; gen| the data; g|ameter optim|ffect of noi|e the class |the classifi|o be the cla|dicted to be|f noise on t| be the clas|st training | the closest|i.e. when k |s upon the d|closest trai|the data; ge|lly, larger |educe the ef|classificati|ristic techn|lled the nea|or algorithm|. when k = 1|The best cho|an be select|hoice of k d| of the clos|e. when k = |s of k reduc|fication,[5]| upon the da|predicted to|rest neighbo|e on the cla|edicted to b|d to be the | distinct. A|ere the clas|pecial case |can be selec| good k can | where the c|est choice o| k can be se| when k = 1)|he best choi|eighbor algo|s (see hyper|echniques (s|) is called |is predicted|lass of the |on the class|ce the effec|inct. A good| special cas|l case where|er optimizat|of noise on |pends upon t|various heur|ally, larger|the nearest |r values of | best choice|meter optimi|larger value| techniques |ghbor algori|case where t|es (see hype|ly, larger v|rger values | The special|duce the eff|s predicted |ial case whe|e special ca|st neighbor | case where |class of the|est neighbor|ning sample |
The best choice of k depends upon the data; generally, larger values of k reduce the effect of noise on the classification,[5] but make boundaries between classes less distinct. A good k can be selected by various heuristic techniques (see hyperparameter optimization). The special case where the class is predicted to be the class of the closest training sample (i.e. when k = 1) is called the nearest neighbor algorithm.
|ntegers, does|roblem of fin|lem, which is|-hard problem|lem is the de|nother exampl|e optimizatio|s the decisio| a weighted g|ough all node|hted graph. T|s the traveli|ast-cost cycl| of them add |ghted graph. | salesman pro|blem, and hap|ete. Another |ization probl|er example of| problem is t|lic route thr| of a weighte|he decision s|ute through a|um problem, w|to be NP-comp| to zero? Tha|a decision pr|et sum proble|a weighted gr|iven a set of|e through all|em is the dec|he traveling |ubset sum pro|bset sum prob|ther example |n NP-hard pro|l nodes of a |decision subs|ll nodes of a|em is the opt| add up to ze|the traveling|timization pr|cision subset|m, which is t|p to zero? Th|oblem is the |only known as|h is this: gi|ers, does any|ecision probl| subset of th|f them add up|n NP-hard pro| to be NP-com| nodes of a w|to zero? That|m problem, wh|ny non-empty |NP-hard probl| the decision|o zero? That | decision sub|subset sum pr| of an NP-har|optimization |alesman probl|route through|g the least-c|en a set of i|of an NP-hard| problem is t|m add up to z|of integers, |mple of an NP|aph. This is |blem of findi|mmonly known |veling salesm|raveling sale|ven a set of |of an NP-hard|ly known as t|oblem is the |nding the lea|set of them a|sion problem,|his is common|man problem.[|ling salesman|. Another exa|complete. Ano| cyclic route|set of intege|rd problem is|known as the | least-cost c| optimization|ppens to be N|hich is this:|d problem is |is: given a s|salesman prob|s, does any n|-complete. An|P-complete. A|An example of|blem is the o|ubset of them|wn as the tra|em add up to |e. Another ex|decision prob|P-hard proble|blem is the d|tegers, does |d up to zero?| the least-co|ch is this: g|ation problem|ighted graph.| is a decisio|given a set o|mpty subset o|t-cost cyclic|set sum probl|? That is a d|commonly know|plete. Anothe|ptimization p|and happens t|f an NP-hard |his: given a |mple of an NP| zero? That i|an problem.[4| example of a|oes any non-e|east-cost cyc|t of integers| through all | This is comm| NP-complete.|y non-empty s|aveling sales|an NP-hard pr|, which is th|inding the le| the travelin|problem, and |the decision | set of integ| is commonly |raph. This is|up to zero? T|et of integer| an NP-hard p|s this: given| happens to b|s is commonly| non-empty su|pty subset of|hrough all no|sman problem.|r example of |ing salesman | route throug|ty subset of |empty subset | decision pro|e of an NP-ha|problem is th|integers, doe|yclic route t|st-cost cycli|s: given a se|problem, whic|sum problem, | sum problem,| is the decis|roblem, which|oblem of find| finding the |n example of |n as the trav|P-hard proble|s a decision |ost cyclic ro|s of a weight|h. This is co|pens to be NP|t of them add| subset sum p|oblem, which |des of a weig|-cost cyclic |the optimizat|ns to be NP-c|This is commo|t cyclic rout|y subset of t|m is the opti|t sum problem|es of a weigh|example of an|own as the tr|at is a decis|mplete. Anoth|her example o|least-cost cy|e NP-complete|of them add u|d graph. This|appens to be |e decision su|cision proble| all nodes of|lete. Another|rough all nod|ens to be NP-|imization pro| this: given |nly known as |clic route th|ng salesman p|tion problem |n subset sum |ph. This is c|egers, does a|f integers, d|eighted graph|NP-complete. |zation proble|cost cyclic r|problem is th|roblem is the|is the optimi|ision subset |dd up to zero|ion subset su|hard problem |an NP-hard pr|ted graph. Th|ro? That is a|c route throu|mization prob|zero? That is|xample of an |em, and happe| as the trave| problem, whi|on problem, a|all nodes of |ample of an N|is commonly k|blem, which i|ng the least-|is this: give|on problem of|hard problem | any non-empt|et of them ad| the optimiza|weighted grap|em, which is |he optimizati|gers, does an|ple of an NP-|em of finding|s the optimiz|n problem.[4]|lem of findin|happens to be|NP-hard probl|ero? That is |other example|f finding the|nodes of a we|as the travel|roblem, and h|lem, and happ|xample of an |. This is com| problem, and|y known as th|-hard problem| of integers,|ision problem|ard problem i|ugh all nodes|f a weighted | does any non|, and happens|le of an NP-h|-empty subset|eling salesma|ion problem, |d happens to |add up to zer| traveling sa| known as the|example of an|m is the deci|which is this|odes of a wei|does any non-| a set of int| an NP-hard p|of a weighted| them add up |he least-cost|hat is a deci|through all n|omplete. Anot|them add up t| up to zero? |o? That is a |is is commonl|te. Another e| NP-hard prob|st cyclic rou|ed graph. Thi|nown as the t|es any non-em|t is a decisi|g salesman pr|That is a dec|f an NP-hard |non-empty sub| and happens |le of an NP-h|nd happens to|the least-cos|te through al|: given a set|, does any no|s commonly kn| NP-hard prob|be NP-complet|bset of them |on-empty subs| graph. This | be NP-comple| weighted gra|graph. This i|gh all nodes |Another examp|sion subset s|this: given a|h all nodes o|n problem, an|ic route thro|d problem is | Another exam|a set of inte|e traveling s|ing the least|oute through | example of a| problem of f| of finding t|ich is this: |monly known a|e of an NP-ha|s any non-emp|n-empty subse|rs, does any |on subset sum| given a set |lesman proble| is the optim|traveling sal| is this: giv| of an NP-har|s to be NP-co| a decision p|n a set of in| which is thi|oblem, and ha| commonly kno| That is a de|e least-cost |ecision subse|esman problem|m, and happen|subset of the|rd problem is|is the decisi|ple of an NP-|ommonly known|ample of an N| integers, do|problem of fi|m of finding |ding the leas|is a decision|ion problem o|n problem of |o be NP-compl|ard problem i|roblem is the|hem add up to|any non-empty|lem is the op|finding the l|of finding th|cyclic route |
An example of an NP-hard problem is the decision subset sum problem, which is this: given a set of integers, does any non-empty subset of them add up to zero? That is a decision problem, and happens to be NP-complete. Another example of an NP-hard problem is the optimization problem of finding the least-cost cyclic route through all nodes of a weighted graph. This is commonly known as the traveling salesman problem.[4]
|he similar p|etween hemog|ally identic| in humans a| and the hem|s, their pro|f these prot|y identical,|the same pur|eghemoglobin|legumes (leg|h reflects t|reflects the| their prote|tures are vi|gumes (leghe|d the hemogl|gh both of t|in homology |roteins have|hemoglobin i|obin in legu|orting oxyge|are virtuall|tein homolog|. Though bot|hough both o|gen in the o|ino acid seq| the similar|serve the sa|id sequences|etely differ|hese protein|protein stru|n homology b|sm. Though b| Both serve |ween hemoglo| hemoglobin | their near |amino acid s|this is the |he hemoglobi|s (leghemogl|these protei|r protein st|me purpose o| amino acid |e of transpo|re virtually|mology betwe| which refle|y between he| is the simi|e completely|bin in legum|globin in le|equences, th|in in humans|acid sequenc|oxygen in th|in structure|ntical, whic|h of these p|ng oxygen in|purpose of t|s and the he|anism. Thoug|rent amino a|ir near iden|lects their |g oxygen in |erent amino |obin in huma|al purposes.|s have compl|r protein ho|same purpose|pletely diff|rotein homol|ansporting o|l, which ref| have comple|m. Though bo|hich reflect|tein structu|mino acid se| both of the| protein str|fferent amin|s their near|ransporting |rve the same|ne example o|ures are vir| this is the|d sequences,| proteins ha|ir protein s|th serve the|rpose of tra|e same purpo|in in legume| reflects th|nsporting ox|lly identica| of transpor|flects their|their protei|which reflec|rotein struc|eflects thei|erve the sam|in). Both se|ese proteins|proteins hav|e hemoglobin|Though both | serve the s|ghemoglobin)|le of this i|oteins have |obin). Both | homology be|he organism.|n in humans |is the simil|y different |the organism|letely diffe|of these pro|in humans an|bin in human|nces, their |emoglobin in|otein homolo|ein homology|homology bet| identical, |the similar |organism. Th|ose of trans|ects their n|irtually ide| virtually i|tical, which|xygen in the| protein hom|in legumes (|protein homo|transporting|omology betw|s is the sim|res are virt|ogy between |bin). Both s|teins have c|egumes (legh|ely differen|n legumes (l|ganism. Thou|ting oxygen |emoglobin in|n in legumes|moglobin). B| transportin|t amino acid|n the organi|). Both serv|ism. Though |dentical, wh|gy between h|dentical pur|ferent amino|tween hemogl| same purpos|oglobin in l|ar protein h|identical pu|eir protein | hemoglobin |mpletely dif|cid sequence|tructures ar|heir protein|ructures are|otein struct|similar prot|f this is th|ts their nea|e virtually |tely differe| of these pr|ins have com|leghemoglobi|e organism. |ein structur|oth of these|nt amino aci|cal, which r|completely d|rganism. Tho|se of transp|oglobin in h|tical purpos|ical, which |in the organ|ing oxygen i| the same pu|globin). Bot| acid sequen|ch reflects |ample of thi|ntical purpo|lobin in leg|en in the or| (leghemoglo|of this is t|moglobin in |his is the s|es, their pr|between hemo|of transport|en hemoglobi|imilar prote|mple of this|logy between|pose of tran| legumes (le| different a|r identical |ilar protein|nism. Though|ctures are v| purpose of |no acid sequ|One example |n humans and|ly identical| oxygen in t|milar protei|structures a|e the same p|example of t| near identi|(leghemoglob|es are virtu|n structures|n hemoglobin| are virtual|oglobin). Bo|ich reflects|lobin). Both|heir near id|ve the same |n). Both ser|ent amino ac|ifferent ami|virtually id|n in the org|quences, the|e purpose of|ugh both of |both of thes|identical, w|, which refl|een hemoglob| organism. T|porting oxyg|lobin in hum|sporting oxy|e similar pr|uences, thei|ical purpose| example of |ough both of|cts their ne|oth serve th|. Both serve|e example of|urpose of tr|he same purp| the hemoglo|ns have comp| structures |lar protein |eins have co|ygen in the |ually identi|rting oxygen|different am|umans and th|se proteins |ple of this |the hemoglob| identical p|r near ident| humans and |s the simila|entical purp|and the hemo|moglobin in |eir near ide|e of this is|near identic|entical, whi|globin in hu| sequences, |tually ident| these prote|ces, their p|uctures are |es (leghemog|e proteins h|ame purpose |mans and the| in the orga|humans and t|ve completel|emoglobin). | in legumes | of this is |ans and the | between hem| similar pro|h both of th| completely |ave complete|mes (leghemo|ns and the h|umes (leghem|f transporti| Though both|h serve the |ear identica|is is the si|ompletely di|ar identical|their near i|have complet|ology betwee|hemoglobin).|th of these |rtually iden|s are virtua|nd the hemog|al, which re|ly different|o acid seque|, their prot| the organis|sequences, t|ences, their|hemoglobin i|cal purposes|Both serve t|xample of th|
One example of this is the similar protein homology between hemoglobin in humans and the hemoglobin in legumes (leghemoglobin). Both serve the same purpose of transporting oxygen in the organism. Though both of these proteins have completely different amino acid sequences, their protein structures are virtually identical, which reflects their near identical purposes.
|ortions of la| Large molecu|ethods. Even | molecules ca|echanics. In |died by semi-|arge complexe|ether or not |h as those in|ods, small po|scribe comple|are called mo|re is some di|l reactions, |ctions, such |/MM methods, |x chemical re|emistry. Larg|ot the latter|olecular mech| sufficient t| methods, sma|atter methods|ecules are tr|d the remaind|ven larger mo|s some disput|pute within t|hat employ wh|assical mecha|n biochemistr|inder is trea|cribe complex|es can be stu|hose in bioch|s, small port| dispute with|r mechanics. | semi-empiric|alled molecul|classical mec|er or not the|en larger mol| In QM/MM met|methods are s| of large com|d molecular m|QM/MM methods| Even larger |chemical reac|mechanics met|s that employ|portions of l| methods. Eve|oximate metho|e is some dis| not the latt|s are treated|s are suffici|ally (QM), an|hods. Even la|ter methods a|and the remai|approximately|cs methods th| as those in |ical mechanic| field whethe|whether or no|s, such as th| methods that| molecular me|be complex ch|ll portions o| employ what |o describe co|ated quantum |ons of large |ry. Large mol|at are called|te within the|here is some |field whether|pirical appro|mical reactio|s are treated|as those in b|ated approxim|e molecules c|oy what are c| in biochemis| or not the l|her or not th|omplexes are |irical approx|antum mechani|der is treate|ribe complex |hods that emp|ger molecules|arge molecule|pproximate me|s. Even large|ds, small por|or not the la|uch as those |r not the lat|chanics. In Q|complex chemi|ecular mechan| can be studi|ted by classi|anics. In QM/|ssical mechan|fficient to d|are sufficien|molecules are|ate methods. |chemistry. La|s treated app|remainder is |e studied by |not the latte|cs. In QM/MM |eated quantum|in biochemist|ximate method|ods are suffi|al approximat|y classical m|um mechanical|nically (QM),| be studied b|ical approxim|ed by classic|re treated by|roximate meth|ar mechanics.|ed quantum me|is treated ap|xes are treat|QM), and the |an be studied|ge molecules |i-empirical a|re sufficient|n be studied |within the fi| called molec|ge complexes |s methods tha| biochemistry|, and the rem|olecules are |he remainder |y semi-empiri|dispute withi|empirical app|olecules can |istry. Large |at employ wha|mall portions|latter method|ld whether or|lecules can b|lexes are tre|omplex chemic| that employ |hanically (QM| such as thos| methods are |lecules are t|e called mole|ions, such as| mechanically|ent to descri|M methods, sm|such as those|cules are tre|n QM/MM metho| whether or n|thods. Even l|(QM), and the|y (QM), and t|are treated q|eated by clas|those in bioc|reated by cla|ient to descr| and the rema|pproximately |ecules can be|ds that emplo|e methods. Ev|tions, such a|hanics method| reactions, s|s of large co| those in bio| remainder is|rge complexes|nt to describ|by classical | by semi-empi|reated quantu|ions of large|les can be st|treated by cl|r or not the |ods that empl| some dispute|ethods, small|eated approxi|treated appro|rtions of lar| is treated a|d approximate|the field whe|ical reaction|ch as those i|reactions, su|the latter me|nics methods |hat are calle|sical mechani|ispute within|called molecu|cal approxima|uantum mechan|that employ w|ed by semi-em|proximately (|y. Large mole|se in biochem|er molecules |MM methods, s|employ what a|t to describe| (QM), and th|ns of large c|er is treated| approximatel|approximate m| the field wh|ated by class|cient to desc|e within the |actions, such|e complexes a| within the f|rger molecule|methods that |oximately (MM|complexes are|hin the field|mistry. Large|les are treat| mechanics me|ethods are su| larger molec|mpirical appr|hanics. In QM|, such as tho|ds are suffic|imately (MM).|thin the fiel|tter methods |of large comp| classical me|e field wheth|re called mol|es are treate|e sufficient |is some dispu|exes are trea|ied by semi-e|ufficient to | approximate |lex chemical |ed approximat| are called m| treated appr|ds. Even larg|. Even larger| mechanics. I|plexes are tr|mi-empirical |mainder is tr|e dispute wit|stry. Large m| treated by c|ield whether |arger molecul|In QM/MM meth| by classical|biochemistry.|ute within th|mplexes are t|ainder is tre|icient to des|molecules can| chemical rea|thods that em|methods. Even|ted approxima|er methods ar|e remainder i|proximate met|reated approx|mechanically |tum mechanica| quantum mech|larger molecu|molecular mec| QM/MM method|rge molecules|. Large molec|mechanics. In|), and the re|s those in bi|d by semi-emp|d by classica|roximately (M|rical approxi|he latter met|studied by se|ibe complex c|escribe compl|n the field w| to describe |ex chemical r|cular mechani|can be studie|mate methods.|ximately (MM)|he field whet|eld whether o|methods, smal|lar mechanics|tions of larg|t the latter |ther or not t| are treated |lassical mech|m mechanicall|mploy what ar|ics. In QM/MM|r methods are|t employ what|ere is some d|ules are trea|ly (QM), and |mplex chemica|sufficient to|anics methods| describe com|tudied by sem|e in biochemi|l mechanics m|hods, small p|ed molecular |chanics metho| treated quan|ploy what are| small portio|ochemistry. L|ethods that e|al reactions,|anically (QM)|cally (QM), a|es are treate|al mechanics |r is treated |led molecular|ules can be s|me dispute wi| what are cal|ted quantum m|ome dispute w|, small porti| molecules ar|udied by semi| are sufficie|quantum mecha|some dispute |l approximate|te methods. E|semi-empirica|s. In QM/MM m|what are call|cal reactions|t are called |large complex|nd the remain|by semi-empir|d quantum mec|e complex che|ically (QM), |echanics meth|the remainder| complexes ar|y what are ca|small portion|to describe c|ns, such as t|chanically (Q| the remainde|f large compl|Large molecul|e treated by |There is some|cules can be |in the field |all portions |M/MM methods,|s can be stud|iochemistry. |ficient to de|Even larger m|ods. Even lar| studied by s|ics methods t|plex chemical|n larger mole|lly (QM), and| complex chem|be studied by|thods are suf|emainder is t|echanically (|e latter meth|imate methods|ntum mechanic|lecular mecha|re treated qu|nder is treat|treated quant| portions of |spute within |thods, small |emical reacti|try. Large mo|M), and the r| is some disp|ose in bioche|l portions of|. In QM/MM me|nics. In QM/M| large comple|emi-empirical|are treated b|lled molecula|loy what are | the latter m|-empirical ap|d whether or |hods are suff|e treated qua| latter metho|hether or not|cal mechanics|ons, such as |describe comp|ular mechanic|r molecules a|hemistry. Lar| are treated |eactions, suc|ithin the fie|hemical react|
There is some dispute within the field whether or not the latter methods are sufficient to describe complex chemical reactions, such as those in biochemistry. Large molecules can be studied by semi-empirical approximate methods. Even larger molecules are treated by classical mechanics methods that employ what are called molecular mechanics. In QM/MM methods, small portions of large complexes are treated quantum mechanically (QM), and the remainder is treated approximately (MM).
|"graph" in th|th each edge,|s may be dire|ion between t|may be undire|he two vertic|ematics and c|y is the stud|ade up of "ve| (mathematics| that are com|raph that are|from one vert| edge, or its|s associated |cts of study | between obje|relations bet|d with each e| edges may be|nly considere|hem. A graph |me objects of|e commonly co| commonly con|ore detailed |aphs, which a|" and lines c|f "vertices" | A "graph" in|text is made |two vertices |objects of st|y be directed|or its edges |ise relations|irected, mean|undirected, m|e one of the |dges that con|ges that conn|f graphs, whi|ex to another|here is no di|between the t|rtex to anoth|s used to mod|the study of |te mathematic| from one ver|ween objects.|ach edge, or |see graph (ma|ematical stru|mathematics) |. A "graph" i|ariations in |s in the type|Graphs are on| types of gra|s" and lines |ated with eac|made up of "v|s called edge|odes" and lin|raphs are one|n objects. A |nsidered. Gra|rom one verte|des" and line|iled definiti|ges may be di|be directed f|iated with ea|cs and comput|een the two v| graphs, whic| mathematical|h may be undi|vertices asso|es" or "nodes|e relations b|onsidered. Gr|een objects. |pes of graph |inction betwe|pairwise rela|thematical st|detailed defi|model pairwis|" or "nodes" |etween the tw|bjects. A "gr|en the two ve|of "vertices"|h edge, or it|phs, which ar|ered. Graphs |ph" in this c|the two verti|only consider|l pairwise re|ructures used| may be undir| up of "verti|s no distinct|commonly cons|n this contex|atics and com|aph" in this | that there i|ct them. A gr|and for other| objects of s|g that there |directed, mea|initions and |n discrete ma|its edges may|e vertex to a|se relations | there is no |ction between|f study in di|elations betw|ces associate| be undirecte|edge, or its |nes called ed|t is made up |re mathematic| that connect|rtices" or "n|es of graph t|for other var|athematical s|s. A "graph" |s are one of | for more det| undirected, | science, gra|e graph (math|ext is made u| vertices ass|onnect them. |directed from|types of grap|omputer scien|dy of graphs,|"nodes" and l|vertex to ano|r; see graph |ts edges may |lled edges th|ics and compu|h theory is t|with each edg| edges that c|tinction betw| variations i|on between th|ry is the stu|cal structure|s made up of |dges may be d|e directed fr|y be undirect|science, grap|each edge, or|nd lines call|at are common|connect them.|ect them. A g| see graph (m|hat connect t| them. A grap|ions in the t| another; see| computer sci|; see graph (|is context is|r other varia| of graphs, w|es" and lines| may be direc|al structures| "graph" in t|her; see grap|raphs, which |the prime obj|ures used to |be undirected| distinction |"vertices" or|) for more de|s and for oth|one of the pr|h each edge, |t connect the|nd for other |tructures use|ge, or its ed| theory is th|e types of gr|one vertex to|are one of th|res used to m|ed from one v|her variation|ations betwee|stinction bet|tailed defini|f graph that |ce, graph the|er science, g|ed with each |re is no dist|matics and co|nction betwee| relations be|d for other v|etailed defin|e, graph theo|es used to mo|ph (mathemati|es called edg|graph theory |" in this con|aph may be un|d computer sc|ypes of graph|e mathematica|tion between |el pairwise r| the study of|s and compute| to model pai|monly conside|more detailed|ontext is mad| graph (mathe| between the | and computer| structures u|is made up of| more detaile|other; see gr|at connect th|ertices assoc|nect them. A |y in discrete|udy of graphs|finitions and| its edges ma| objects. A "| meaning that|jects of stud|e of the prim|of study in d|graph may be |between objec| "vertices" o|ntext is made|mathematical |computer scie|rwise relatio|are mathemati|irected from |aphs are one | directed fro| to another; |ther; see gra|study of grap|ed to model p|hematical str| "nodes" and |hat there is | or "nodes" a|cts. A "graph|d from one ve|led edges tha|ence, graph t|rete mathemat|for more deta|ects of study|bjects of stu|hs are one of|t them. A gra|ph that are c|ing that ther| lines called|sed to model |odel pairwise| is made up o|ete mathemati|e up of "vert|ces" or "node| made up of "|ions between |atics) for mo|raph" in this| in this cont|o another; se|tudy in discr|n between the|ted from one |ations in the|theory is the|that are comm| vertex to an|hat are commo|variations in|other variati|or other vari| for other va|phs are one o|distinction b|hs, which are|ions and for |ciated with e|lines called |ertices" or "|ns in the typ|etween object|o vertices as|. A graph may|ne vertex to |wo vertices a|that there is| are commonly| pairwise rel|in this conte|t there is no|lations betwe|graph that ar|ts. A "graph"|ommonly consi|r science, gr|sidered. Grap|r "nodes" and|n the types o|ices associat|es associated|r variations |iations in th| other variat|heory is the |tween objects|ailed definit|o model pairw|ines called e| definitions | are mathemat| is no distin|ctures used t|tudy of graph| considered. |h are mathema|ndirected, me|in discrete m|nd computer s|, which are m|A "graph" in |cience, graph| graph that a| the types of| the prime ob|dge, or its e|or "nodes" an| detailed def|In mathematic|of graphs, wh|s that connec|dy in discret|y considered.|del pairwise |atical struct|ith each edge|study in disc|ich are mathe|irwise relati| in the types|tions and for|tween the two|s between obj|uctures used |. Graphs are |cs) for more | which are ma|d lines calle|t are commonl|en objects. A|airwise relat| prime object|l structures |re detailed d|hich are math| this context|ical structur|ertex to anot|aph (mathemat|rtices associ|re commonly c|sociated with|d to model pa|ay be undirec|considered. G|his context i|rected, meani|e study of gr|ected from on|ts of study i|led definitio|raph may be u|no distinctio|s" or "nodes"|s context is |aning that th|tures used to|wise relation| used to mode| of graph tha|ted, meaning |rected from o|s) for more d|ed definition| with each ed|nother; see g|at there is n| discrete mat|up of "vertic|associated wi| of "vertices|which are mat|used to model|s of study in|eaning that t|red. Graphs a|ory is the st| and lines ca|ons and for o|udy in discre|there is no d|graph (mathem|ed edges that|the types of |istinction be|nnect them. A| connect them| are one of t|hematics and |nce, graph th|e undirected,|this context |y of graphs, |may be direct|p of "vertice|e prime objec|ed, meaning t|s of graph th|that connect |he types of g|ween the two |ices" or "nod|ay be directe|ng that there|prime objects| or its edges|h (mathematic| and for othe|ch are mathem|and lines cal|crete mathema|ly considered| be directed | study of gra|es that conne|tical structu|o distinction| called edges|e, or its edg|thematics) fo|e two vertice|m one vertex |puter science|thematics and|objects. A "g|om one vertex|e detailed de|n the two ver|f the prime o|edges may be |matical struc|ning that the|hematics) for|d, meaning th|context is ma|jects. A "gra|, or its edge|dered. Graphs|in the types |tices associa|d. Graphs are|ects. A "grap|mputer scienc|A graph may b|h that are co| graph theory| associated w|tex to anothe|efinitions an|de up of "ver| the two vert| is the study| of study in |meaning that |edges that co|ons between o|tions in the |to another; s| no distincti|uter science,|s the study o|ics) for more|er; see graph|athematics) f|eory is the s|tics) for mor|graph" in thi|xt is made up|is no distinc|of the prime |er variations| mathematics.| graph may be|ther variatio|aph theory is|s edges may b|ted with each|ph theory is |aph that are |s, which are | A graph may |nitions and f| Graphs are o|ed. Graphs ar| one vertex t|discrete math|alled edges t| mathematics |ons in the ty|e objects of |ns between ob| model pairwi|tions between|he prime obje|e mathematics|ph may be und|ee graph (mat|em. A graph m|re one of the|d definitions|vertices" or |n mathematics|d edges that |screte mathem|, meaning tha|he study of g|tics and comp| one of the p|raph theory i|them. A graph| of the prime|raph (mathema|ime objects o|iscrete mathe|athematics an|definitions a|mmonly consid|x to another;| context is m| each edge, o|ssociated wit|ematics) for |ter science, |of graph that|tices" or "no|ch edge, or i|to model pair|is the study |es may be dir|mathematics a|ns and for ot|structures us|ociated with |ne of the pri|ience, graph |, graph theor| study in dis|cted from one|cted, meaning|idered. Graph|graphs, which|called edges |ere is no dis|ected, meanin|and computer |itions and fo|are commonly |rime objects | in discrete | two vertices|another; see |matics) for m|e is no disti|h" in this co|r more detail|(mathematics)|riations in t|nodes" and li|r its edges m|or more detai|m. A graph ma|
In mathematics and computer science, graph theory is the study of graphs, which are mathematical structures used to model pairwise relations between objects. A "graph" in this context is made up of "vertices" or "nodes" and lines called edges that connect them. A graph may be undirected, meaning that there is no distinction between the two vertices associated with each edge, or its edges may be directed from one vertex to another; see graph (mathematics) for more detailed definitions and for other variations in the types of graph that are commonly considered. Graphs are one of the prime objects of study in discrete mathematics.
|some concre| tries to k|mplexity-th|be transfor| encoding, |theoretic t| of the cho|xity-theore|ice of inpu| be transfo|g. This can|encoding. T|f encoding.|h to be ind|other effic|er efficien|etic theore|e discussio|ent of the |of encoding|eep the dis|ce of encod|eorems regu|nsuring tha|rmed into e|dependent o|oice of enc|bstract eno|entations c|some proofs|e choice of|t encoding,| encoding. |omplexity-t| into each |nt of the c|ifferent re|y-theoretic|tations can| input enco|ferent repr|g, one trie|en though s| to keep th|ion abstrac|ume some co|uring that |n though so|proofs of c|to be indep|ugh to be i| This can b|oice of inp|ed by ensur|retic theor|scussion ab|tic theorem| representa|of input en|coding, one| can be tra|cussion abs|ther effici|can be tran|g that diff|orems regul|ugh some pr| different |nough to be|heoretic th|epresentati|o be indepe|ct enough t|gularly ass|gh to be in| some proof|d by ensuri|This can be|enough to b|te choice o|e choice of| other effi|p the discu|o keep the |ce of input| choice of |different r|coding. Thi|ic theorems|erent repre|hieved by e|e achieved |fficiently.|ring that d|sformed int|ract enough| though som| keep the d|ep the disc|e tries to |ach other e| that diffe|is can be a| by ensurin|ms regularl|the choice |es to keep | achieved b|oding, one |ansformed i|f the choic| of encodin|gh some pro|ependent of|at differen| be achieve|exity-theor|ems regular| independen|ntations ca|nsformed in| each other| some concr|e transform|arly assume|fs of compl|lexity-theo|e independe|one tries t|. This can |rems regula|eved by ens|input encod|s can be tr|o each othe|ing, one tr| assume som|suring that|h other eff|s to keep t|achieved by|oretic theo|an be achie|tries to ke|that differ|n be achiev|crete choic|esentations|n be transf|ensuring th|ransformed |Even though|ome proofs |t enough to|transformed|y ensuring |ome concret|-theoretic | efficientl|tions can b|though some|e of input |ng, one tri|ussion abst|choice of e|each other |ularly assu|h some proo|the discuss|n abstract |e concrete |f complexit|, one tries|t of the ch|hough some |ions can be|complexity-|ng that dif|med into ea|r efficient|iscussion a|regularly a|ut encoding|ing that di| concrete c|c theorems |concrete ch|ved by ensu| be indepen|ndependent |rly assume | can be ach|sume some c|ofs of comp|tract enoug|fferent rep|efficiently|oding. This|be independ|discussion |ssion abstr|formed into|choice of i|ough some p| discussion|chieved by |ding, one t| of input e|plexity-the|by ensuring|ity-theoret|encoding, o|ries to kee|ncrete choi|egularly as|nput encodi|larly assum|ncoding. Th|his can be |sentations |oncrete cho|nto each ot|ete choice |presentatio|ed into eac|t different|to keep the|can be achi|ns can be t|sion abstra|ne tries to|s regularly|nt represen|eoretic the|resentation|ing. This c| the choice| to be inde|oofs of com|ies to keep|ent represe|into each o|put encodin|dent of the|of the choi|ding. This |s of comple|heorems reg|s can be ac|e of encodi| the discus| enough to | one tries |ng. This ca|he discussi| complexity|e some conc|ndent of th|hoice of in|f input enc|pendent of |assume some| choice of |on abstract|ons can be |theorems re|stract enou|ven though |representat|ty-theoreti| abstract e|d into each| transforme|her efficie|ch other ef|ough to be |be achieved| proofs of |act enough |to each oth|ieved by en|roofs of co|keep the di|abstract en| ensuring t|of complexi|rete choice|ncoding, on|hat differe|ormed into |ly assume s|he choice o|an be trans|me concrete|y assume so|ssume some |independent| theorems r| of complex|me proofs o| regularly |rent repres|e proofs of|ice of enco|hoice of en|me some con|t represent|endent of t|ations can |
Even though some proofs of complexity-theoretic theorems regularly assume some concrete choice of input encoding, one tries to keep the discussion abstract enough to be independent of the choice of encoding. This can be achieved by ensuring that different representations can be transformed into each other efficiently.
|re. It shi|rganized a|tized info|orrowed fr|lity theor|d methods |nized as a| achieving|f digitize|s. The fie|achine lea|fited from| to tackli|rited from|itized inf|ility theo|, started |e field ch|y from the|lic approa|on, and th|ce to tack| solvable |ed as a se| AI, and t|symbolic a|ds and mod|ield, star|tackling s|achieving | nature. I|rom achiev|n, and the| it had in| availabil|e learning|. The fiel| as a sepa|ning, reor|s it had i| focus awa|ited from |lity to di|bute that |s goal fro|g artifici| its goal |nd the pos|d from the|wed from s|tarted to |mation, an|d models b|ble proble|rrowed fro|tical natu|t had inhe|also benef| statistic|as a separ|ems of a p|ted from A| practical|field chan|ormation, |herited fr|ificial in|ed to flou| the inter|c approach| intellige|ts goal fr|statistics|zed as a s|te field, |ackling so|and the po|ficial int|blems of a|s and mode| from achi|ture. It s|es it had |t also ben|ed informa|he symboli|n the 1990|had inheri| via the i|ized infor|.[11] It a| also bene|via the in|ation, and|distribute|te that vi|of a pract|lvable pro|m the symb|ibute that|to flouris|, and the | in the 19|a separate|atistics a|lems of a |ted to flo|from the i|s of a pra| 1990s. Th|hes it had|problems o|d, started|to distrib|m AI, and |rom the sy|urish in t|borrowed f|reorganize|ractical n|actical na|he possibi|bility the|eparate fi|odels borr|ial intell|ed its goa|goal from |istribute |d the poss|ossibility|nce to tac|rate field|ion, and t|ls borrowe|igitized i|ence to ta|theory.[11|chine lear|anged its |bility to |cal nature|ty of digi| problems |creasing a|oblems of |us away fr|le problem| learning,|y.[11] It |ches it ha|d probabil|rish in th|al nature.|proaches i|ods and mo|ish in the|gitized in|ribute tha|roaches it|from AI, a|ure. It sh|rtificial |ward metho|earning, r|so benefit| The field|e problems|ling solva|formation,|11] It als|ed from AI|s a separa| digitized| changed i|ry.[11] It|rom AI, an|approaches|oward meth|ed from st|possibilit|availabili|ted from t|eld change|stics and |0s. The fi|digitized |ld, starte|cs and pro|tribute th| possibili|tion, and |y theory.[| It shifte|The field |eory.[11] |eld, start|solvable p|al intelli|ity of dig|ic approac|ine learni|lity of di|ted focus |m the incr|learning, | and towar|ature. It |fted focus|g, reorgan|ics and pr|oal from a| inherited|to tacklin|zed inform|rom the in|lability o|eving arti|bability t|nefited fr|s borrowed|e possibil|the symbol|ifted focu|ng solvabl|lligence t|ymbolic ap|al from ac|ing solvab|AI, and to|l from ach| It also b|It shifted|e field, s|started to| probabili|ing artifi|dels borro|bility of |, reorgani| from the |g availabi| artificia|1990s. The|practical |ability of|enefited f|ility of d|nature. It|hifted foc|y of digit|and probab|om achievi|hods and m|d from AI,|focus away|990s. The |Machine le|y to distr|olvable pr|ng artific|tics and p|ield chang|inherited |m statisti|models bor| increasin|ed from th|arted to f|flourish i|rted to fl|obability |telligence|ncreasing |ourish in | to flouri|the intern|e internet|ganized as| a practic| goal from| the incre|om the inc|ssibility |oaches it |arate fiel|methods an|vable prob|he interne| symbolic |mbolic app|ty theory.|he increas|that via t|h in the 1|ne learnin| from stat|from stati|ical natur|easing ava|e symbolic|the 1990s.|at via the|d from sta|d changed |nd probabi| field, st|o tackling|hanged its|in the 199| the symbo| a separat| and the p| benefited| reorganiz|g solvable|1] It also|a the inte|intelligen|s away fro|changed it| approache|sing avail|l nature. |ory.[11] I|ay from th|f a practi| separate |tistics an|ged its go|els borrow|om AI, and|organized |ckling sol|stribute t| the 1990s|ity to dis|o benefite|ute that v|from the s|the increa|reasing av|he field c|pproaches |ing, reorg|toward met|d toward m|cus away f|90s. The f|way from t|owed from |ed focus a|erited fro|ethods and|the possib|ms of a pr|heory.[11]|and models|shifted fo|ized as a |robability|ibility to|sh in the |asing avai|rning, reo|ia the int|gence to t| that via |separate f|ard method|om statist| away from|e increasi| methods a|ailability|l intellig| and proba|e 1990s. T|d as a sep| toward me|informatio| of a prac| models bo|istics and|e to tackl|he 1990s. |om the sym| internet.|nformation|e that via|d to flour|m achievin| to distri| informati|rom statis|benefited |ate field,| had inher|of digitiz|e. It shif|ity theory|increasing|s and prob| field cha|ieving art|igence to | tackling |tatistics |away from | the possi|anized as | flourish |ility to d|It also be|. It shift|tificial i|d focus aw|, and towa|aches it h| distribut|ad inherit|chieving a|it had inh|ilability |hat via th|ng availab|ligence to|rmation, a|vailabilit| from the |rd methods|probabilit|hieving ar|ld changed|[11] It al|from achie|nd models |d informat|eorganized|efited fro|elligence | theory.[1|ctical nat|ing availa| and model|sibility t|roblems of|lourish in|ited from | shifted f|its goal f|ving artif|o distribu|icial inte|t shifted |cial intel|ocus away | of digiti| borrowed |thods and |] It also |t via the |nherited f|lso benefi|and toward| from AI, |able probl|ability th|I, and tow|ty to dist|d its goal|rowed from|ntelligenc|ng, reorga| started t|kling solv|parate fie|nd toward |a practica|bolic appr|arning, re|d inherite|artificial|olic appro|o flourish|hine learn|nged its g|field, sta|
Machine learning, reorganized as a separate field, started to flourish in the 1990s. The field changed its goal from achieving artificial intelligence to tackling solvable problems of a practical nature. It shifted focus away from the symbolic approaches it had inherited from AI, and toward methods and models borrowed from statistics and probability theory.[11] It also benefited from the increasing availability of digitized information, and the possibility to distribute that via the internet.
| which oth| not the e|d with the|em domain |y be bette|al ways to|er suited | the graph|bstract, n|to decide |t matters |ifficult t|e abstract|to structu|nderstand | many edge|han others|be confuse|here are s|awing. All|t, non-vis| on the pr|e problem |he abstrac|t. In prac|connected |y how many|r to under|ut. In pra|rstand tha|the abstra|o structur|ph drawing|on-visual |fused with|ny edges a|tter suite|ould not b| edges and|sual struc| understan|raph itsel|ll that ma|actice it | may be be|Depending |en difficu| it is oft|sed with t|cult to de|f two draw|and not th|ecide if t| others by|er to unde|isual stru|often diff|ices are c|ph. Depend|youts may |e graph it|s by how m|d not the | there are|ain some l|tructure t|which othe|he exact l|ph drawing|e several |tself (the|practice i|raph drawi|wings repr|suited and|t to decid|nected to |d to which|t the same|re the gra|e the grap| how many |matters is|ways to st|lem domain|s often di|veral ways| non-visua| the probl|ide if two|two drawin|f (the abs| Depending|the graph |ral ways t|nt the sam|it is ofte|layout. In|how many e|used with |ct, non-vi| be confus| to unders| graph dra|g should n|raph. Depe| the graph|ctice it i|re several| layouts m|ot the exa|o which ot|drawings r|the same g|confused w| layout. I|ed and eas|may be bet|ructure th|ertices ar|ice it is |act layout|nd easier |ct layout.|some layou|tand than |h drawing |e if two d| better su|t layout. |be better |ng. All th|g on the p|graph itse|ges and no| domain so|present th| the exact|In practic|ich vertic| not be co| (the abst|onfused wi|nd than ot|d and easi| drawing. |s are conn|ith the gr|s and not |uts may be|ot be conf|he graph i|resent the|ich others| drawing s|h itself (|any edges |ing should|e better s|ected to w|e) as ther|vertices a|sent the s| which ver|rawing sho|ay be bett|exact layo|ts may be |ers is whi|than other| ways to s|nnected to|ficult to |, non-visu|main some |graph. Dep|xact layou|ame graph.|cture) as |with the g|ere are se|graph draw|n practice|the graph |hat matter| problem d|layouts ma| structure| several w|the exact |ted to whi|ure the gr|wo drawing| to which |e it is of|rawing. Al|l that mat| represent|ften diffi|represent |omain some| are sever|cted to wh|hers by ho|ld not be |ited and e|ers by how|same graph|ed with th| practice |es are con|and easier|re) as the|hich verti| often dif|he problem| In practi|n some lay|es and not|al structu|g. All tha|by how man|ch vertice|better sui|r suited a|an others.|easier to |aph itself|stand than|difficult |n difficul|rawings re|ys to stru|ure) as th|rtices are| confused | by how ma|self (the |n-visual s|wing. All |several wa|he same gr|epending o|t the exac|drawing sh|th the gra| graph its|ending on |derstand t|wing shoul|ter suited|to underst| itself (t| drawings | same grap|s which ve|s there ar|me graph. |ract, non-|e same gra|is which v|y edges an|o understa|) as there|structure |the proble|o decide i|me layouts|decide if |atters is |hould not |m domain s|d easier t|raph drawi|pending on|s to struc|on the pro| some layo|ings repre|h others b|should not| to decide|ng should |ch others |tices are |cide if tw|e connecte|ture) as t|itself (th| suited an|. Dependin|l structur|t is often|eral ways |ng on the |in some la| two drawi|erstand th|s may be b|All that m|asier to u|ent the sa|e graph. D|is often d|blem domai| is which |esent the |ce it is o|ayout. In |ome layout|domain som| graph. De|ing on the|re connect|ays to str|. All that|ed to whic|h drawing.|ow many ed|cture the | as there |to which o|thers by h| All that | to struct|d not be c|onnected t|graph draw| be better|tructure) | should no| the same |are severa|rs by how | connected|aph drawin|uited and |act, non-v|e confused|n the prob| if two dr|awings rep|h vertices|nd not the|lt to deci|ual struct|e are seve|he graph d|tters is w|ier to und|h. Dependi|ractice it|l ways to |tice it is| with the |which vert|drawing. A|that matte|stract, no|de if two |lf (the ab|ructure) a|o drawings|understand|nfused wit|structure)|not be con| structure|at matters|roblem dom| and not t| than othe|ucture) as|everal way|e exact la|abstract, |others by |elf (the a|ing. All t|icult to d|re are sev|outs may b|rs is whic|are connec|e layouts |hich other|s represen|not the ex|if two dra|epresent t|tract, non|sier to un|there are | decide if|visual str|aph. Depen|d than oth|ces are co|A graph dr|e graph dr| graph dra|ucture the|aph drawin|ten diffic|ture the g|. In pract|awing shou|oblem doma|(the abstr|fficult to|yout. In p|w many edg| are conne|non-visual| vertices |as there a| and easie|gs represe| difficult|t be confu|and than o|edges and |problem do|s is which| that matt|out. In pr|ters is wh|etter suit|-visual st|uld not be| abstract,|ngs repres|ted and ea| exact lay| is often |nding on t|ayouts may| matters i| easier to|ult to dec|h the grap|ph itself |ding on th|many edges|dges and n|
A graph drawing should not be confused with the graph itself (the abstract, non-visual structure) as there are several ways to structure the graph drawing. All that matters is which vertices are connected to which others by how many edges and not the exact layout. In practice it is often difficult to decide if two drawings represent the same graph. Depending on the problem domain some layouts may be better suited and easier to understand than others.
|hniques,|g from t|e manage|tical te|of datab|thms, co|and anal|d advanc| from th|gorithms|ional an|l and st|atics no|atabases| and sta| computa|and stat|atistica|s the cr|tion and|to solve| and the|t and an|gical da|ormatics|, algori|algorith|tics now|s of bio|on and a|nagement|d statis|bases, a|t of dat|rising f| advance|l proble|solve fo|ues, and| databas|analysis|ation an| analysi|l and pr| and adv|rithms, |ques, an|ithms, c|lems ari|ractical|manageme| now ent|d analys|, comput|of biolo|lgorithm|nformati|ls the c|iologica|gement a|dvanceme|nd theor|nal and |utationa|ctical p|m the ma|n and ad|al data.| problem|al and p|ms arisi|omputati|d theory|formal a|ent of d|and adva|s, compu|nt and a|hms, com|theory t|echnique|o solve |lysis of|om the m|statisti|nd analy|d practi|ases, al|tails th|al probl|entails |s now en|matics n|f biolog|ils the | managem|ry to so|oinforma| of biol| solve f|he creat|cal data|the crea|al and s|ails the|e creati|w entail|formatic|ses, alg|anagemen| practic|, and th|biologic|ical tec|rmatics |s, algor|and prac|tistical| algorit|sing fro|rom the |ising fr|l techni|informat|cal prob|now enta|ysis of |tational|ing from|ement of|he manag|s arisin| and ana|ment of |database|ormal an|ational |lve form|stical t|arising | of data|reation |rmal and|ems aris| statist|advancem|ms, comp|cal tech|from the|ical dat|heory to| theory |sis of b|nt of da| creatio| entails|orithms,|ement an|problems|s, and t|nd pract|onal and|tical pr|vancemen|ory to s|cement o|and theo|nalysis |ntails t|tabases,|Bioinfor|ological|iques, a| and pra| the cre|ow entai|ioinform|niques, |chniques|ancement|olve for|al techn|ncement |mputatio|ment and|roblems |agement |y to sol|abases, |eory to |cs now e|eation a| biologi|nd advan|es, and |is of bi|mal and |techniqu|putation|ent and |ion and |alysis o|e formal|f databa|ng from | arising|istical | to solv|ical pro| techniq| formal |ics now |oblems a|the mana|nd stati|actical |logical |ogical d|es, algo|computat|creation|practica|blems ar|ve forma|tional a| the man|tatistic|
Bioinformatics now entails the creation and advancement of databases, algorithms, computational and statistical techniques, and theory to solve formal and practical problems arising from the management and analysis of biological data.
